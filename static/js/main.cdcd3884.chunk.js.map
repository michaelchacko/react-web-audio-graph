{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","components/nodes/Analyser/Visualiser.tsx","hooks/useAnimationFrame.ts","components/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Gain.tsx","components/nodes/Noise.tsx","components/nodes/Oscillator.tsx","utils/notes.ts","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","nodeCleanup","node","stop","disconnect","Nodes","nodes","useRef","addNode","id","current","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToNode","startsWith","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","useOnEdgeRemove","useNodeContext","edge","disconnectNodes","useContext","useNode","edges","useStoreState","store","useEffect","filter","forEach","Visualiser","paused","type","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","ref","style","display","React","memo","Node","inputs","outputs","title","className","map","input","position","Position","Left","output","Right","Analyser","selected","nodeType","fftSizeExp","onChange","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","alignItems","checked","BiquadFilter","detune","gain","frequency","Q","createBiquadFilter","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","_","channel","flexDirection","Object","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Gain","createGain","setValueAtTime","currentTime","linearRampToValueAtTime","generateWhiteNoise","buffer","bufferSize","getChannelData","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","sampleRate","generator","brown","pink","createBuffer","log","createBufferSource","loop","Oscillator","createOscillator","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","toFixed","OscillatorNote","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","useState","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Float32Array","Function","updateCurve","flexWrap","rows","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","isEdge","reduce","nodeIds","nodeId","Promise","resolve","setTimeout","Flow","elements","initialTransform","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","setElements","onElementsConnect","useOnConnect","onEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","onLoad","reactFlowInstance","setTransform","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","defaultPosition","defaultZoom","zoom","onConnect","params","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","floor","clientY","clientX","onlyRenderVisibleElements","snapToGrid","snapGrid","zIndex","gap","popper","textareaStyles","fontSize","resize","controlsStyles","right","transformOrigin","getDefaultProject","Project","setProject","visible","setVisible","mappedElements","__rf","mappedTransform","project","JSON","stringify","drawerStyles","padding","transition","getDrawerStyles","atob","location","hash","substr","parse","btoa","clearProject","toggleProjectDrawer","marginRight","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdcd3884.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AudioNode) {\n  (node as any).stop?.();\n  node.disconnect();\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToNode = connection.targetHandle.startsWith(\"input\");\n  const source = getNode(connection.source);\n  const target = getNode(connection.target);\n\n  return {\n    inputIndex: connectToNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: source,\n    target: connectToNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AudioNode) {\n  const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n\n  try {\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AudioNode) {\n  const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n\n  try {\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, useContext, useEffect } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes } from \"utils/handles\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  getNode: (id: string) => AudioNode;\n  nodes: Record<string, AudioNode>;\n  removeNode: (id: string) => void;\n};\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode(id: string, node: AudioNode) {\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    edges.filter(edge => edge.source === id || edge.target === id).forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AnalyserNode>(() => context.createAnalyser(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"11\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<BiquadFilterNode>(() => context.createBiquadFilter(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React, { useContext, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ChannelMergerNode>(() => context.createChannelMerger(inputs), [context, inputs]);\n  useNode(id, node);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={inputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React, { useContext, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ChannelSplitterNode>(() => context.createChannelSplitter(outputs), [context, outputs]);\n  useNode(id, node);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={outputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ConstantSourceNode>(() => context.createConstantSource(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DelayNode>(() => context.createDelay(clampDelayTime(maxDelayTime)), [context, maxDelayTime]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={0.1}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useContext } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = context.destination;\n  useNode(id, node);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DynamicsCompressorNode>(() => context.createDynamicsCompressor(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gain({ data, id, selected, type }: NodeProps) {\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<GainNode>(() => context.createGain(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setValueAtTime(node.gain.value, context.currentTime);\n    node.gain.linearRampToValueAtTime(gain, context.currentTime + 0.01);\n  }, [context, node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = \"white\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AudioBufferSourceNode>(() => {\n    // Will create buffer with 5 seconds of noise\n    const bufferSize = 5 * context.sampleRate;\n    const generators = {\n      brown: generateBrownNoise,\n      pink: generatePinkNoise,\n      white: generateWhiteNoise,\n    };\n    const generator = generators[type as keyof typeof generators];\n    const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n    console.log(buffer.getChannelData(0));\n    const node = context.createBufferSource();\n    node.buffer = buffer;\n    node.loop = true;\n\n    return node;\n  }, [context, type]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"white\">white</option>\n              <option value=\"pink\">pink</option>\n              <option value=\"brown\">brown</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<StereoPannerNode>(() => context.createStereoPanner(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<WaveShaperNode>(() => context.createWaveShaper(), [context]);\n  useNode(id, node);\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  FlowTransform,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Gain from \"components/nodes/Gain\";\nimport Noise from \"components/nodes/Noise\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n  transform: FlowTransform;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Gain: Gain,\n  Noise: Noise,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nfunction Flow({ elements: initialElements, transform: initialTransform }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const onLoad = async (reactFlowInstance: ReactFlowInstance) => {\n    reactFlowInstance.setTransform(initialTransform);\n\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(params, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = draggedNode.position;\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: Math.floor(event.clientY / 10) * 10,\n        left: Math.floor(event.clientX / 10) * 10,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: (virtualReference.getBoundingClientRect().left - transform[0]) / transform[2],\n        y: (virtualReference.getBoundingClientRect().top - transform[1]) / transform[2],\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[initialTransform.x, initialTransform.y]}\n        defaultZoom={initialTransform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[10, 10]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={10} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ChannelMerger\")}>Add Channel Merger</li>\n            <li onClick={() => addNode(\"ChannelSplitter\")}>Add Channel Splitter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Noise\")}>Add Noise</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n            <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n            <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStoreState, Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project({ setProject }: Props) {\n  const [visible, setVisible] = useState(false);\n  const elements = useStoreState(store => store.elements);\n  const transform = useStoreState(store => store.transform);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const mappedTransform = {\n    x: transform[0],\n    y: transform[1],\n    zoom: transform[2],\n  };\n  const project = JSON.stringify({\n    elements: mappedElements,\n    transform: mappedTransform,\n  });\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, transform } = JSON.parse(project);\n      setProject({\n        elements,\n        id: uuidv4(),\n        transform,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, transform } = JSON.parse(e.target.value);\n        setProject({\n          elements,\n          id: uuidv4(),\n          transform,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  const clearProject = useCallback(() => {\n    setProject(getDefaultProject);\n  }, [setProject]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: mappedElements,\n            transform: mappedTransform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>(getDefaultProject);\n\n  return (\n    <Audio>\n      <ReactFlowProvider>\n        <Nodes>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} transform={project.transform} />\n            <Project setProject={setProject} />\n          </div>\n        </Nodes>\n      </ReactFlowProvider>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}