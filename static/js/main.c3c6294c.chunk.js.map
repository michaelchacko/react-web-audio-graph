{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","context/NodeContext.tsx","nodes/Analyser/Visualiser.tsx","hooks/useAnimationFrame.ts","nodes/Node.tsx","nodes/Analyser/index.tsx","nodes/BiquadFilter.tsx","nodes/ConstantSource.tsx","nodes/Delay.tsx","nodes/Destination.tsx","nodes/DynamicsCompressor.tsx","nodes/Gain.tsx","nodes/Oscillator.tsx","utils/notes.ts","nodes/OscillatorNote.tsx","components/Flow.tsx","utils/handles.ts","components/Project.tsx","components/Nodes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","NodeContext","useNodeContext","useContext","Visualiser","dataGetter","node","paused","canvasProps","audioData","useRef","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","current","getContext","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","barWidth","barHeight","drawFrequencyData","getData","dataArray","call","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","useAnimationFrame","ref","style","display","Node","id","inputs","outputs","type","className","title","map","input","position","Position","Left","output","Right","React","memo","Analyser","selected","console","log","fftSizeExp","onChange","createAnalyser","addNode","fftSize","Math","pow","max","min","e","target","step","justifyContent","alignItems","checked","BiquadFilter","nodeType","detune","gain","frequency","Q","createBiquadFilter","ConstantSource","offset","createConstantSource","start","stop","Delay","delayTime","createDelay","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Gain","createGain","Oscillator","createOscillator","NOTES","assertOctaveValid","octave","RangeError","assertTwelfthValid","twelfth","OscillatorNote","getNoteFrequency","note","getNoteName","toFixed","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","filter","isEdge","reduce","nodeIds","edge","source","Object","keys","forEach","nodeId","Promise","resolve","setTimeout","Flow","elements","useState","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","transform","useStoreState","store","setElements","nodes","onElementsConnect","connection","targetHandle","connect","useOnConnect","onEdgeRemove","disconnect","defaultValue","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","onLoad","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","onConnect","params","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","floor","clientY","clientX","onlyRenderVisibleElements","snapToGrid","snapGrid","zIndex","gap","popper","Project","setProject","mappedElements","__rf","undefined","project","JSON","stringify","atob","location","hash","substr","parse","btoa","error","padding","fontSize","resize","Nodes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3c6294c.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  nodes: Record<string, AudioNode>;\n};\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<Node extends AudioNode>(id: string): Node {\n  const context = useNodeContext();\n\n  return context.nodes[id] as Node;\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataGetter } from \"nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  dataGetter: DataGetter;\n  node: AnalyserNode;\n  paused: boolean;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nconst Visualiser = ({ dataGetter, node, paused, ...canvasProps }: Props) => {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (dataGetter === \"getByteTimeDomainData\") {\n      drawTimeDomainData(context, audioData.current);\n    } else if (dataGetter === \"getByteFrequencyData\") {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [dataGetter]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    node[dataGetter].call(node, dataArray);\n    audioData.current = dataArray;\n  }, [node, dataGetter]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n};\n\nexport default Visualiser;\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, type }: Props) {\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"nodes/Node\";\n\nexport type DataGetter = \"getByteFrequencyData\" | \"getByteTimeDomainData\";\n\nconst Analyser = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"Analyser render\", data, id, selected);\n  const { dataGetter = \"getByteTimeDomainData\", fftSizeExp = 11, onChange, paused = false } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AnalyserNode>(() => context.createAnalyser(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} type={type}>\n      <div className=\"customNode_item\">\n        <Visualiser dataGetter={dataGetter} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"11\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ dataGetter: e.target.value })} value={dataGetter}>\n              <option value=\"getByteFrequencyData\">Frequency</option>\n              <option value=\"getByteTimeDomainData\">Time Domain</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Analyser);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst BiquadFilter = ({ data, id, selected, type: nodeType }: NodeProps) => {\n  console.log(\"BiquadFilter render\", data, id, selected);\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<BiquadFilterNode>(() => context.createBiquadFilter(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]} outputs={[\"output\"]} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(BiquadFilter);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst ConstantSource = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"ConstantSource render\", data, id, selected);\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ConstantSourceNode>(() => context.createConstantSource(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(ConstantSource);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Delay = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"Delay render\", data, id, selected);\n  const { delayTime = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DelayNode>(() => context.createDelay(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Delay);\n","import React, { useContext, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Destination = ({ id, type }: NodeProps) => {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = context.destination;\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n};\n\nexport default React.memo(Destination);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst DynamicsCompressor = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"DynamicsCompressor render\", data, id, selected);\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DynamicsCompressorNode>(() => context.createDynamicsCompressor(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Gain = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"Gain render\", data, id, selected);\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<GainNode>(() => context.createGain(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Gain);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Oscillator = ({ data, id, selected, type: nodeType }: NodeProps) => {\n  console.log(\"Oscillator render\", data, id, selected);\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node id={id} inputs={[\"detune\", \"frequency\"]} outputs={[\"output\"]} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C^#\", \"D\", \"D^#\", \"E\", \"F\", \"F^#\", \"G\", \"G^#\", \"A\", \"A^#\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.35;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  return `${NOTES[twelfth % 12]}_${octave}`;\n}\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"nodes/Node\";\n\nconst OscillatorNote = ({ data, id, selected, type: nodeType }: NodeProps) => {\n  console.log(\"OscillatorNote render\", data, id, selected);\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n  const note = getNoteName(octave, twelfth);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node id={id} inputs={[\"detune\"]} outputs={[\"output\"]} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <div>\n              <button onClick={() => onChange({ octave: (11 + octave - 1) % 11 })}>-</button>\n              <button onClick={() => onChange({ octave: (octave + 1) % 11 })}>+</button>\n              octave: {octave}\n              <br />\n              <button onClick={() => onChange({ twelfth: (12 + twelfth - 1) % 12 })}>-</button>\n              <button onClick={() => onChange({ twelfth: (twelfth + 1) % 12 })}>+</button>\n              twelfth:\n              {twelfth}\n              <br />\n              {note} @ {frequency.toFixed(2)} Hz\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"nodes/Analyser\";\nimport BiquadFilter from \"nodes/BiquadFilter\";\nimport ConstantSource from \"nodes/ConstantSource\";\nimport Delay from \"nodes/Delay\";\nimport Destination from \"nodes/Destination\";\nimport DynamicsCompressor from \"nodes/DynamicsCompressor\";\nimport Gain from \"nodes/Gain\";\nimport Oscillator from \"nodes/Oscillator\";\nimport OscillatorNote from \"nodes/OscillatorNote\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Gain: Gain,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nfunction Flow({ elements: initialElements }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const onLoad = async () => {\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(params, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = draggedNode.position;\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: Math.floor(event.clientY / 10) * 10,\n        left: Math.floor(event.clientX / 10) * 10,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: (virtualReference.getBoundingClientRect().left - transform[0]) / transform[2],\n        y: (virtualReference.getBoundingClientRect().top - transform[1]) / transform[2],\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[10, 10]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={10} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (connection: Edge | Connection) => {\n      console.log(\"Connection created\", connection);\n\n      if (!connection.source || !connection.target || !connection.targetHandle) {\n        return;\n      }\n\n      const source = nodes[connection.source];\n      const target = nodes[connection.target];\n      const targetHandle = connection.targetHandle;\n\n      // connect AudioNode\n      if (targetHandle === \"input\") {\n        source.connect(target);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.connect(target[targetHandle]);\n        // @ts-ignore\n        target[targetHandle].value = 0;\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (edge: Edge) => {\n      console.log(\"Connection removed\", edge);\n\n      if (!edge.source || !edge.target || !edge.targetHandle) {\n        return;\n      }\n\n      const source = nodes[edge.source];\n      const target = nodes[edge.target];\n      const targetHandle = edge.targetHandle;\n\n      // connect AudioNode\n      if (targetHandle === \"input\") {\n        source.disconnect(target);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.disconnect(target[targetHandle]);\n        // @ts-ignore\n        target[targetHandle].value = target[targetHandle].defaultValue;\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (nodeId: string) => {\n      console.log(\"Node removed\", nodeId, nodes);\n\n      const node = nodes[nodeId];\n\n      if (!node) {\n        return;\n      }\n\n      node.disconnect();\n    },\n    [nodes]\n  );\n}\n","import { useStoreState, Elements } from \"react-flow-renderer\";\nimport React, { Dispatch, SetStateAction, useCallback, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n}\n\nfunction Project({ setProject }: Props) {\n  const elements = useStoreState(store => store.elements);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const project = JSON.stringify(mappedElements);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const elements = JSON.parse(project);\n      setProject({\n        id: uuidv4(),\n        elements,\n      });\n    } catch {}\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const elements = JSON.parse(e.target.value) as Elements;\n        setProject({\n          elements,\n          id: uuidv4(),\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  return (\n    <div\n      style={{\n        padding: 10,\n        width: 400,\n      }}\n    >\n      <textarea\n        onChange={onChange}\n        style={{\n          fontSize: 12,\n          height: \"100%\",\n          resize: \"none\",\n          width: \"100%\",\n        }}\n        value={JSON.stringify(mappedElements, null, 2)}\n      />\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      nodes: nodes.current,\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>({\n    id: \"\",\n    elements: [],\n  });\n\n  return (\n    <Audio>\n      <Nodes>\n        <ReactFlowProvider>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} />\n            <Project setProject={setProject} />\n          </div>\n        </ReactFlowProvider>\n      </Nodes>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}