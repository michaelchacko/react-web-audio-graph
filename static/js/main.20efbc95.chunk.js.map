{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","context/NodeContext.tsx","nodes/Analyser/Visualiser.tsx","hooks/useAnimationFrame.ts","nodes/Node.tsx","nodes/Analyser/index.tsx","nodes/BiquadFilter.tsx","nodes/ConstantSource.tsx","nodes/Delay.tsx","nodes/Destination.tsx","nodes/DynamicsCompressor.tsx","nodes/Gain.tsx","nodes/Oscillator.tsx","utils/notes.ts","nodes/OscillatorNote.tsx","components/Flow.tsx","utils/handles.ts","components/Project.tsx","components/Nodes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","resume","useCallback","state","onClick","Provider","value","NodeContext","useNodeContext","useContext","Visualiser","node","dataGetter","canvasProps","audioData","useRef","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","current","getContext","height","width","drawContext","data","fillStyle","fillRect","x","bufferLength","length","sliceWidth","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","barWidth","barHeight","drawFrequencyData","getData","dataArray","call","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","useAnimationFrame","ref","style","display","Node","id","inputs","outputs","type","className","title","map","input","position","Position","Left","output","Right","React","memo","Analyser","selected","console","log","fftSizeExp","onChange","createAnalyser","addNode","fftSize","Math","pow","max","min","e","target","step","BiquadFilter","nodeType","detune","gain","frequency","Q","createBiquadFilter","ConstantSource","offset","createConstantSource","start","stop","Delay","delayTime","createDelay","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Gain","createGain","Oscillator","createOscillator","NOTES","assertOctaveValid","octave","RangeError","assertTwelfthValid","twelfth","OscillatorNote","getNoteFrequency","note","getNoteName","toFixed","nodeTypes","Flow","initialElements","elements","useState","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","transform","useStoreState","store","setElements","onElementsConnect","nodes","connection","source","targetHandle","connect","useOnConnect","onEdgeRemove","edge","disconnect","defaultValue","useOnEdgeRemove","onNodeRemove","nodeId","useOnNodeRemove","onElementsRemove","elementsToRemove","filter","isEdge","forEach","isNode","removeElements","uuidv4","getBoundingClientRect","left","top","produce","draft","find","element","Object","keys","property","onConnect","params","addEdge","onEdgeUpdate","oldEdge","newConnection","onLoad","setTimeout","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","floor","clientY","clientX","onlyRenderVisibleElements","snapToGrid","snapGrid","zIndex","gap","popper","Project","setProject","mappedElements","__rf","undefined","project","JSON","stringify","atob","location","hash","substr","parse","btoa","error","padding","fontSize","resize","Nodes","App","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20efbc95.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => new window.AudioContext(), []);\n\n  const resume = useCallback(() => {\n    if (context.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  nodes: Record<string, AudioNode>;\n};\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<Node extends AudioNode>(id: string): Node {\n  const context = useNodeContext();\n\n  return context.nodes[id] as Node;\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataGetter } from \"nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  dataGetter: DataGetter;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\ninterface DrawData {\n  context: CanvasRenderingContext2D;\n  data: Uint8Array;\n  height: number;\n  width: number;\n}\n\nfunction drawTimeDomainData({ context, data, height, width }: DrawData) {\n  let x = 0;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#000\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData({ context, data, height, width }: DrawData) {\n  let x = 0;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#000\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nconst Visualiser = ({ node, dataGetter, ...canvasProps }: Props) => {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const height = canvas.height;\n    const width = canvas.width;\n\n    const drawContext = {\n      context,\n      data: audioData.current,\n      height,\n      width,\n    };\n    context.fillStyle = \"#ddd\";\n    context.fillRect(0, 0, width, 256);\n    if (dataGetter === \"getByteTimeDomainData\") {\n      drawTimeDomainData(drawContext);\n    } else if (dataGetter === \"getByteFrequencyData\") {\n      drawFrequencyData(drawContext);\n    }\n  }, [dataGetter]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    node[dataGetter].call(node, dataArray);\n    audioData.current = dataArray;\n  }, [node, dataGetter]);\n\n  const tick = useCallback(() => {\n    getData();\n    draw();\n  }, [draw, getData]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n};\n\nexport default Visualiser;\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, type }: Props) {\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"nodes/Node\";\n\nexport type DataGetter = \"getByteFrequencyData\" | \"getByteTimeDomainData\";\n\nconst Analyser = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"Analyser render\", data, id, selected);\n  const { dataGetter = \"getByteTimeDomainData\", fftSizeExp = 11, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AnalyserNode>(() => context.createAnalyser(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} type={type}>\n      <div className=\"customNode_item\">\n        <Visualiser node={node} dataGetter={dataGetter} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"11\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ dataGetter: e.target.value })} value={dataGetter}>\n              <option value=\"getByteFrequencyData\">Frequency</option>\n              <option value=\"getByteTimeDomainData\">Time Domain</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Analyser);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst BiquadFilter = ({ data, id, selected, type: nodeType }: NodeProps) => {\n  console.log(\"BiquadFilter render\", data, id, selected);\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<BiquadFilterNode>(() => context.createBiquadFilter(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]} outputs={[\"output\"]} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(BiquadFilter);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst ConstantSource = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"ConstantSource render\", data, id, selected);\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ConstantSourceNode>(() => context.createConstantSource(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(ConstantSource);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Delay = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"Delay render\", data, id, selected);\n  const { delayTime = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DelayNode>(() => context.createDelay(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Delay);\n","import React, { useContext, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Destination = ({ id, type }: NodeProps) => {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = context.destination;\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n};\n\nexport default React.memo(Destination);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst DynamicsCompressor = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"DynamicsCompressor render\", data, id, selected);\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DynamicsCompressorNode>(() => context.createDynamicsCompressor(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Gain = ({ data, id, selected, type }: NodeProps) => {\n  console.log(\"Gain render\", data, id, selected);\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<GainNode>(() => context.createGain(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Gain);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"nodes/Node\";\n\nconst Oscillator = ({ data, id, selected, type: nodeType }: NodeProps) => {\n  console.log(\"Oscillator render\", data, id, selected);\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node id={id} inputs={[\"detune\", \"frequency\"]} outputs={[\"output\"]} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C^#\", \"D\", \"D^#\", \"E\", \"F\", \"F^#\", \"G\", \"G^#\", \"A\", \"A^#\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.35;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  return `${NOTES[twelfth % 12]}_${octave}`;\n}\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"nodes/Node\";\n\nconst OscillatorNote = ({ data, id, selected, type: nodeType }: NodeProps) => {\n  console.log(\"OscillatorNote render\", data, id, selected);\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n  const note = getNoteName(octave, twelfth);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node id={id} inputs={[\"detune\"]} outputs={[\"output\"]} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <div>\n              <button onClick={() => onChange({ octave: (11 + octave - 1) % 11 })}>-</button>\n              <button onClick={() => onChange({ octave: (octave + 1) % 11 })}>+</button>\n              octave: {octave}\n              <br />\n              <button onClick={() => onChange({ twelfth: (12 + twelfth - 1) % 12 })}>-</button>\n              <button onClick={() => onChange({ twelfth: (twelfth + 1) % 12 })}>+</button>\n              twelfth:\n              {twelfth}\n              <br />\n              {note} @ {frequency.toFixed(2)} Hz\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n};\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"nodes/Analyser\";\nimport BiquadFilter from \"nodes/BiquadFilter\";\nimport ConstantSource from \"nodes/ConstantSource\";\nimport Delay from \"nodes/Delay\";\nimport Destination from \"nodes/Destination\";\nimport DynamicsCompressor from \"nodes/DynamicsCompressor\";\nimport Gain from \"nodes/Gain\";\nimport Oscillator from \"nodes/Oscillator\";\nimport OscillatorNote from \"nodes/OscillatorNote\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\ninterface Props {\n  elements: Elements;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Gain: Gain,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n};\n\nfunction Flow({ elements: initialElements }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = () => {\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    setTimeout(() => {\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    }, 0);\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(params, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = draggedNode.position;\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: Math.floor(event.clientY / 10) * 10,\n        left: Math.floor(event.clientX / 10) * 10,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = (data: Record<string, any>): void => {\n        setElements(\n          produce((draft: Elements) => {\n            const node = draft.filter(isNode).find(element => element.id === id);\n            if (!node) {\n              return;\n            }\n            Object.keys(data).forEach(property => (node.data[property] = data[property]));\n          })\n        );\n      };\n      const position = {\n        x: (virtualReference.getBoundingClientRect().left - transform[0]) / transform[2],\n        y: (virtualReference.getBoundingClientRect().top - transform[1]) / transform[2],\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[10, 10]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={10} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (connection: Edge | Connection) => {\n      console.log(\"Connection created\", connection);\n\n      if (!connection.source || !connection.target || !connection.targetHandle) {\n        return;\n      }\n\n      const source = nodes[connection.source];\n      const target = nodes[connection.target];\n      const targetHandle = connection.targetHandle;\n\n      // connect AudioNode\n      if (targetHandle === \"input\") {\n        source.connect(target);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.connect(target[targetHandle]);\n        // @ts-ignore\n        target[targetHandle].value = 0;\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (edge: Edge) => {\n      console.log(\"Connection removed\", edge);\n\n      if (!edge.source || !edge.target || !edge.targetHandle) {\n        return;\n      }\n\n      const source = nodes[edge.source];\n      const target = nodes[edge.target];\n      const targetHandle = edge.targetHandle;\n\n      // connect AudioNode\n      if (targetHandle === \"input\") {\n        source.disconnect(target);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.disconnect(target[targetHandle]);\n        // @ts-ignore\n        target[targetHandle].value = target[targetHandle].defaultValue;\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (nodeId: string) => {\n      console.log(\"Node removed\", nodeId, nodes);\n\n      const node = nodes[nodeId];\n\n      if (!node) {\n        return;\n      }\n\n      node.disconnect();\n    },\n    [nodes]\n  );\n}\n","import { useStoreState, Elements } from \"react-flow-renderer\";\nimport React, { Dispatch, SetStateAction, useCallback, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n}\n\nfunction Project({ setProject }: Props) {\n  const elements = useStoreState(store => store.elements);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const project = JSON.stringify(mappedElements);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const elements = JSON.parse(project);\n      setProject({\n        id: uuidv4(),\n        elements,\n      });\n    } catch {}\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const elements = JSON.parse(e.target.value) as Elements;\n        setProject({\n          elements,\n          id: uuidv4(),\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  return (\n    <div\n      style={{\n        padding: 10,\n        width: 400,\n      }}\n    >\n      <textarea\n        onChange={onChange}\n        style={{\n          fontSize: 12,\n          height: \"100%\",\n          resize: \"none\",\n          width: \"100%\",\n        }}\n        value={JSON.stringify(mappedElements, null, 2)}\n      />\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      nodes: nodes.current,\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>({\n    id: \"\",\n    elements: [],\n  });\n\n  return (\n    <Audio>\n      <Nodes>\n        <ReactFlowProvider>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} />\n            <Project setProject={setProject} />\n          </div>\n        </ReactFlowProvider>\n      </Nodes>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}