{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","context/NodeContext.tsx","components/nodes/Analyser/Visualiser.tsx","hooks/useAnimationFrame.ts","components/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Gain.tsx","components/nodes/Oscillator.tsx","utils/notes.ts","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","utils/handles.ts","components/Flow.tsx","components/Project.tsx","components/Nodes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","NodeContext","useNodeContext","useContext","useNode","id","node","addNode","removeNode","useEffect","Visualiser","paused","type","canvasProps","audioData","useRef","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","current","getContext","DataType","TimeDomain","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","ref","style","display","React","memo","Node","inputs","outputs","title","className","map","input","position","Position","Left","output","Right","Analyser","selected","nodeType","fftSizeExp","onChange","createAnalyser","fftSize","Math","pow","max","min","e","target","step","justifyContent","alignItems","checked","BiquadFilter","detune","gain","frequency","Q","createBiquadFilter","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","_","channel","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","stop","Delay","delayTime","createDelay","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Gain","createGain","Oscillator","createOscillator","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","toFixed","OscillatorNote","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","useState","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Float32Array","sampleRate","Function","updateCurve","console","error","flexWrap","rows","getChannelIndex","handle","match","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","filter","isEdge","reduce","nodeIds","edge","source","Object","keys","forEach","nodeId","Promise","resolve","setTimeout","Flow","elements","initialTransform","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","useStoreState","store","setElements","nodes","onElementsConnect","connection","log","sourceHandle","targetHandle","outputIndex","inputIndex","startsWith","connect","useOnConnect","onEdgeRemove","disconnect","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","onLoad","reactFlowInstance","setTransform","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","defaultPosition","defaultZoom","zoom","onConnect","params","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","floor","clientY","clientX","onlyRenderVisibleElements","snapToGrid","snapGrid","zIndex","gap","popper","textareaStyles","fontSize","resize","controlsStyles","right","transformOrigin","getDefaultProject","Project","setProject","removeNodes","visible","setVisible","mappedElements","__rf","undefined","mappedTransform","project","JSON","stringify","drawerStyles","padding","transition","getDrawerStyles","atob","location","hash","substr","parse","btoa","clearProject","toggleProjectDrawer","marginRight","Nodes","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEaA,EAAeC,wBAA4B,MCkCzCC,MA7Bf,YAAqC,IAApBC,EAAmB,EAAnBA,SACTC,EAAUC,mBAAQ,WACtB,IAME,OALKC,OAAON,eAEVM,OAAON,aAAeM,OAAOC,oBAGxB,IAAID,OAAON,aAClB,aACD,IAEGQ,EAASC,uBAAY,WACF,eAAZ,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASM,QACXN,EAAQI,WAET,CAACJ,IAEJ,OAAKA,EAKH,qBAAKO,QAASH,EAAd,SACE,cAACR,EAAaY,SAAd,CAAuBC,MAAOT,EAA9B,SAAwCD,MALnC,kG,+DCjBEW,EAAcb,wBAA+B,MAEnD,SAASc,IACd,OAAOC,qBAAWF,GAGb,SAASG,EAAQC,EAAYC,GAAkB,IAAD,EACnBJ,IAAxBK,EAD2C,EAC3CA,QAASC,EADkC,EAClCA,WAEjBC,qBAAU,WAER,OADAF,EAAQF,EAAIC,GACL,WACLE,EAAWH,MAEZ,CAACE,EAASD,EAAMD,EAAIG,I,YC8BzB,SAASE,EAAT,GAAoE,IAA9CJ,EAA6C,EAA7CA,KAAMK,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAASC,EAAsB,wCAC3DC,EAAYC,iBAAO,IAAIC,WAAWV,EAAKW,oBACvCC,EAAYH,iBAA0B,MAEtCI,EAAOvB,uBAAY,WACvB,IAAMwB,EAASF,EAAUG,QACnB9B,EAAO,OAAG6B,QAAH,IAAGA,OAAH,EAAGA,EAAQE,WAAW,MAC9BF,GAAW7B,IAIZqB,IAASW,EAASC,WApD1B,SAA4BjC,EAAmCkC,GAC7D,IAAIC,EAAI,EACFC,EAASpC,EAAQ6B,OAAOO,OACxBC,EAAQrC,EAAQ6B,OAAOQ,MACvBC,EAAeJ,EAAKK,OACpBC,EAAaH,EAAQC,EAE3BtC,EAAQyC,UAAY,UACpBzC,EAAQ0C,SAAS,EAAG,EAAGL,EAAO,KAE9BrC,EAAQ2C,UAAY,EACpB3C,EAAQ4C,YAAc,UACtB5C,EAAQ6C,YACR7C,EAAQ8C,OAAOX,EAAGC,EAAWF,EAAK,GAAK,IAASE,EAAU,GAC1D,IAAK,IAAIW,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMC,EAAMd,EAAKa,GAAK,IAASX,EAAU,EACzCpC,EAAQiD,OAAOd,EAAGC,EAASY,GAC3Bb,GAAKK,EAEPxC,EAAQkD,SAkCJC,CAAmBnD,EAASuB,EAAUO,SAC7BT,IAASW,EAASoB,WAhCjC,SAA2BpD,EAAmCkC,GAC5D,IAAIC,EAAI,EACFC,EAASpC,EAAQ6B,OAAOO,OACxBC,EAAQrC,EAAQ6B,OAAOQ,MACvBC,EAAeJ,EAAKK,OACpBc,EAAWhB,EAAQC,EAEzBtC,EAAQyC,UAAY,UACpBzC,EAAQ0C,SAAS,EAAG,EAAGL,EAAO,KAE9BrC,EAAQyC,UAAY,UACpB,IAAK,IAAIM,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMO,EAAYlB,GAAUF,EAAKa,GAAK,KAChCC,EAAIZ,EAASkB,EACnBtD,EAAQ0C,SAASP,EAAGa,EAAGK,EAAUC,GACjCnB,GAAKkB,GAkBHE,CAAkBvD,EAASuB,EAAUO,YAEtC,CAACT,IAEEmC,EAAUnD,uBAAY,WAC1B,IAAMiC,EAAevB,EAAKW,kBACpB+B,EAAY,IAAIhC,WAAWa,GAC7BjB,IAASW,EAASC,WACpBlB,EAAK2C,sBAAsBD,GAClBpC,IAASW,EAASoB,WAC3BrC,EAAK4C,qBAAqBF,GAE5BlC,EAAUO,QAAU2B,IACnB,CAAC1C,EAAMM,IAWV,OCrFa,SAA2BuC,EAAgCC,GACxE,IAAMC,EAAkBtC,mBAClBuC,EAAavC,mBACbwC,EAAM,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAASG,OAElBC,EAAU5D,uBACd,SAAC6D,GACC,GAA+B,MAA3BJ,EAAgBhC,QAAiB,CACnC,IAAMqC,EAAYD,EAAOJ,EAAgBhC,UACpCkC,GAAUG,EAAY,IAAOH,KAChCJ,EAASO,GACTL,EAAgBhC,QAAUoC,QAG5BN,EAAS,GACTE,EAAgBhC,QAAUoC,EAG5BH,EAAWjC,QAAUsC,sBAAsBH,KAG7C,CAACL,IAGH1C,qBAAU,WAGR,OAFA6C,EAAWjC,QAAUsC,sBAAsBH,GAEpC,WACqB,MAAtBF,EAAWjC,SACbuC,qBAAqBN,EAAWjC,YAGnC,CAACmC,IDmDJK,CAPajE,uBAAY,WAClBe,IACHoC,IACA5B,OAED,CAACA,EAAM4B,EAASpC,KAIZ,oCAAQmD,IAAK5C,EAAW6C,MAAO,CAAEC,QAAS,UAAenD,IAGnDoD,UAAMC,KAAKxD,GElF1B,SAASyD,EAAT,GAAsE,IAAtD7E,EAAqD,EAArDA,SAAUe,EAA2C,EAA3CA,GAAI+D,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAO1D,EAAe,EAAfA,KACpD,OACE,sBAAK2D,UAAU,aAAaD,MAAOjE,EAAnC,UACE,qBAAKkE,UAAU,oBAAf,gBAAoCD,QAApC,IAAoCA,IAAS1D,IAC7C,sBAAK2D,UAAU,kBAAf,UACGH,GACC,qBAAKG,UAAU,oBAAf,SACGH,EAAOI,KAAI,SAAAC,GAAK,OACf,sBAAiBF,UAAU,kBAA3B,UACE,cAAC,IAAD,CAAQlE,GAAIoE,EAAOC,SAAUC,IAASC,KAAMhE,KAAK,WAChD6D,IAFOA,QAOfJ,GACC,qBAAKE,UAAU,qBAAf,SACGF,EAAQG,KAAI,SAAAK,GAAM,OACjB,sBAAkBN,UAAU,kBAA5B,UACE,cAAC,IAAD,CAAQlE,GAAIwE,EAAQH,SAAUC,IAASG,MAAOlE,KAAK,WAClDiE,IAFOA,WAQjBvF,KAKQ2E,ICpCH1C,EDoCG0C,MAAMC,KAAKC,GC/B1B,SAASY,EAAT,GAAsE,IAAlDtD,EAAiD,EAAjDA,KAAMpB,EAA2C,EAA3CA,GAAI2E,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BrE,KAA6B,EACea,EAA1EyD,kBAD2D,MAC9C,GAD8C,EAC1CC,EAAyD1D,EAAzD0D,SAD0C,EACe1D,EAA/Cd,cADgC,WACec,EAA/Bb,YADgB,MACTW,EAASC,WADA,EAI7DjC,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAsB,kBAAMD,EAAQ6F,mBAAkB,CAAC7F,IAMpE,OALAa,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAK+E,QAAUC,KAAKC,IAAI,EAAGL,KAAc,CAAC5E,EAAM4E,IAGpE,eAAC,EAAD,CAAM7E,GAAIA,EAAI+D,OAAQ,CAAC,QAAS,WAAYC,QAAS,CAAC,UAAWC,MAAK,oBAAe1D,GAAQA,KAAMqE,EAAnG,UACE,qBAAKV,UAAU,kBAAf,SACE,cAAC,EAAD,CAAY3D,KAAMA,EAAMN,KAAMA,EAAMK,OAAQA,EAAQgB,OAAQ,GAAIC,MAAO,QAExEoD,GACC,sBAAKT,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,KACJC,IAAI,IACJN,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAED,YAAaQ,EAAEC,OAAO3F,SAChD4F,KAAM,EACN5F,MAAOkF,IAERI,KAAKC,IAAI,EAAGL,MAEf,sBAAKX,UAAU,kBAAkBR,MAAO,CAAE8B,eAAgB,iBAA1D,UACE,yBAAQV,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEvE,KAAM8E,EAAEC,OAAO3F,SAAUA,MAAOY,EAAlE,UACE,wBAAQZ,MAAOuB,EAASoB,UAAxB,SAAoCpB,EAASoB,YAC7C,wBAAQ3C,MAAOuB,EAASC,WAAxB,SAAqCD,EAASC,gBAEhD,wBACEuC,MAAO,CACL+B,WAAY,SACZ9B,QAAS,QAHb,UAME,uBACEO,UAAU,SACV3D,KAAK,WACLmF,QAASpF,EACTwE,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAExE,QAASA,OAVvC,sB,SAxCAY,K,sBAAAA,E,0BAAAA,M,KA6DG0C,UAAMC,KAAKa,GC9D1B,SAASiB,EAAT,GAA0E,IAAlDvE,EAAiD,EAAjDA,KAAMpB,EAA2C,EAA3CA,GAAI2E,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BrE,KAA6B,EACca,EAA7EwE,cAD+D,MACtD,EADsD,IACcxE,EAAjEyE,YADmD,MAC5C,EAD4C,IACczE,EAAvD0E,iBADyC,MAC7B,IAD6B,IACc1E,EAAtC2E,SADwB,MACpB,EADoB,EACjBjB,EAA+B1D,EAA/B0D,SADiB,EACc1D,EAArBb,YADO,MACA,UADA,EAIjErB,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAA0B,kBAAMD,EAAQ8G,uBAAsB,CAAC9G,IAU5E,OATAa,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAK2F,OAAOjG,MAAQiG,IAAS,CAAC3F,EAAM2F,IAC1DxF,qBAAU,WAAYH,EAAK6F,UAAUnG,MAAQmG,IAAY,CAAC7F,EAAM6F,IAChE1F,qBAAU,WAAYH,EAAK4F,KAAKlG,MAAQkG,IAAO,CAAC5F,EAAM4F,IACtDzF,qBAAU,WAAYH,EAAK8F,EAAEpG,MAAQoG,IAAI,CAAC9F,EAAM8F,IAChD3F,qBAAU,WAAYH,EAAKM,KAAOA,IAAO,CAACN,EAAMM,IAG9C,cAAC,EAAD,CACEP,GAAIA,EACJ+D,OAAQ,CAAC,QAAS,SAAU,YAAa,OAAQ,KACjDC,QAAS,CAAC,UACVC,MAAK,kBAAa1D,GAClBA,KAAMqE,EALR,SAOGD,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,KAAM,IACND,IAAK,IACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEc,QAASP,EAAEC,OAAO3F,SAC5C4F,KAAM,EACNhF,KAAK,QACLZ,MAAOiG,MAGX,qBAAK1B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,IAAK,EACLD,IAAK,MACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEgB,WAAYT,EAAEC,OAAO3F,SAC/CY,KAAK,SACLZ,MAAOmG,MAGX,qBAAK5B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,KAAM,GACND,IAAK,GACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEe,MAAOR,EAAEC,OAAO3F,SAC1C4F,KAAM,GACNhF,KAAK,QACLZ,MAAOkG,MAGX,qBAAK3B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,IAAK,KACLD,IAAK,IACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEiB,GAAIV,EAAEC,OAAO3F,SACvCY,KAAK,SACLZ,MAAOoG,MAGX,qBAAK7B,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEvE,KAAM8E,EAAEC,OAAO3F,SAAUA,MAAOY,EAAlE,UACE,wBAAQZ,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,+BASCiE,UAAMC,KAAK8B,GCpF1B,SAASM,EAAT,GAAiD,IAAxBjG,EAAuB,EAAvBA,GAAIO,EAAmB,EAAnBA,KAErBrB,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAA2B,kBAAMD,EAAQgH,oBAAoB,KAAI,CAAChH,IAG/E,OAFAa,EAAQC,EAAIC,GAGV,cAAC,EAAD,CACED,GAAIA,EACJ+D,OAAQoC,MAAMlG,EAAKmG,gBAChBC,KAAK,GACLlC,KAAI,SAACmC,EAAGC,GAAJ,sBAAyBA,MAChCvC,QAAS,CAAC,UACVzD,KAAMA,IAKGqD,UAAMC,KAAKoC,GClB1B,SAASO,EAAT,GAAmD,IAAxBxG,EAAuB,EAAvBA,GAAIO,EAAmB,EAAnBA,KAEvBrB,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAA6B,kBAAMD,EAAQuH,sBAAsB,KAAI,CAACvH,IAGnF,OAFAa,EAAQC,EAAIC,GAGV,cAAC,EAAD,CACED,GAAIA,EACJ+D,OAAQ,CAAC,SACTC,QAASmC,MAAMlG,EAAKyG,iBACjBL,KAAK,GACLlC,KAAI,SAACmC,EAAGC,GAAJ,uBAA0BA,MACjChG,KAAMA,IAKGqD,UAAMC,KAAK2C,GCnB1B,SAASG,EAAT,GAAkE,IAAxCvF,EAAuC,EAAvCA,KAAMpB,EAAiC,EAAjCA,GAAI2E,EAA6B,EAA7BA,SAAUpE,EAAmB,EAAnBA,KAAmB,EAC9Ba,EAAzBwF,cADuD,MAC9C,EAD8C,EAC3C9B,EAAa1D,EAAb0D,SAGd5F,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAA4B,kBAAMD,EAAQ2H,yBAAwB,CAAC3H,IAUhF,OATAkB,qBAAU,WAER,OADAH,EAAK6G,QACE,kBAAM7G,EAAK8G,UACjB,CAAC9G,IACJF,EAAQC,EAAIC,GAGZG,qBAAU,kBAAOH,EAAK2G,OAAOjH,MAAQiH,IAAS,CAAC3G,EAAM2G,IAGnD,cAAC,EAAD,CAAM5G,GAAIA,EAAIgE,QAAS,CAAC,UAAWC,MAAK,oBAAe2C,GAAUrG,KAAMA,EAAvE,SACGoE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,SACLuE,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAE8B,QAASvB,EAAEC,OAAO3F,SAC5C+D,MAAO,CAAEnC,MAAO,QAChB5B,MAAOiH,UASNhD,UAAMC,KAAK8C,GClC1B,SAASK,EAAT,GAAyD,IAAxC5F,EAAuC,EAAvCA,KAAMpB,EAAiC,EAAjCA,GAAI2E,EAA6B,EAA7BA,SAAUpE,EAAmB,EAAnBA,KAAmB,EAClBa,EAA5B6F,iBAD8C,MAClC,EADkC,EAC/BnC,EAAa1D,EAAb0D,SAGjB5F,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAmB,kBAAMD,EAAQgI,gBAAe,CAAChI,IAM9D,OALAa,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAKgH,UAAUtH,MAAQsH,IAAY,CAAChH,EAAMgH,IAG9D,cAAC,EAAD,CAAMjH,GAAIA,EAAI+D,OAAQ,CAAC,QAAS,aAAcC,QAAS,CAAC,UAAWC,MAAK,iBAAYgD,EAAZ,MAA2B1G,KAAMA,EAAzG,SACGoE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,SACLuE,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEmC,WAAY5B,EAAEC,OAAO3F,SAC/CA,MAAOsH,UASNrD,UAAMC,KAAKmD,GC7B1B,SAASG,EAAT,GAA+C,IAAxBnH,EAAuB,EAAvBA,GAAIO,EAAmB,EAAnBA,KAMzB,OAFAR,EAAQC,EAFQF,qBAAWhB,GACNsI,aAGd,cAAC,EAAD,CAAMpH,GAAIA,EAAI+D,OAAQ,CAAC,SAAUxD,KAAMA,IAGjCqD,UAAMC,KAAKsD,GCT1B,SAASE,EAAT,GAAsE,IAAxCjG,EAAuC,EAAvCA,KAAMpB,EAAiC,EAAjCA,GAAI2E,EAA6B,EAA7BA,SAAUpE,EAAmB,EAAnBA,KAAmB,EAC0Ba,EAArFkG,cAD2D,MAClD,KADkD,IAC0BlG,EAArEmG,YAD2C,MACpC,GADoC,EAChCzC,EAA0D1D,EAA1D0D,SADgC,EAC0B1D,EAAhDoG,aADsB,MACd,GADc,IAC0BpG,EAApCqG,eADU,MACA,IADA,IAC0BrG,EAApBsG,iBADN,OACmB,GADnB,EAI7DxI,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAgC,kBAAMD,EAAQyI,6BAA4B,CAACzI,IAUxF,OATAa,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAKyH,UAAU/H,MAAQ+H,IAAY,CAACzH,EAAMyH,IAChEtH,qBAAU,WAAYH,EAAKsH,KAAK5H,MAAQ4H,IAAO,CAACtH,EAAMsH,IACtDnH,qBAAU,WAAYH,EAAKuH,MAAM7H,MAAQ6H,IAAQ,CAACvH,EAAMuH,IACxDpH,qBAAU,WAAYH,EAAKqH,OAAO3H,MAAQ2H,IAAS,CAACrH,EAAMqH,IAC1DlH,qBAAU,WAAYH,EAAKwH,QAAQ9H,MAAQ8H,IAAU,CAACxH,EAAMwH,IAG1D,cAAC,EAAD,CACEzH,GAAIA,EACJ+D,OAAQ,CAAC,QAAS,YAAa,OAAQ,QAAS,SAAU,WAC1DC,QAAS,CAAC,UACVzD,KAAMA,EAJR,SAMGoE,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,IACJC,IAAI,OACJG,KAAK,IACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAE4C,WAAYrC,EAAEC,OAAO3F,SAC/CA,MAAO+H,MAGX,qBAAKxD,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,KACJC,IAAI,IACJG,KAAK,IACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEyC,MAAOlC,EAAEC,OAAO3F,SAC1CA,MAAO4H,MAGX,qBAAKrD,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,KACJC,IAAI,IACJG,KAAK,IACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAE0C,OAAQnC,EAAEC,OAAO3F,SAC3CA,MAAO6H,MAGX,qBAAKtD,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,IACJC,IAAI,IACJG,KAAK,QACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEwC,QAASjC,EAAEC,OAAO3F,SAC5CA,MAAO2H,MAGX,qBAAKpD,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,IACJC,IAAI,IACJG,KAAK,QACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAE2C,SAAUpC,EAAEC,OAAO3F,SAC7CA,MAAO8H,WASN7D,UAAMC,KAAKwD,GCrF1B,SAASO,EAAT,GAAwD,IAAxCxG,EAAuC,EAAvCA,KAAMpB,EAAiC,EAAjCA,GAAI2E,EAA6B,EAA7BA,SAAUpE,EAAmB,EAAnBA,KAAmB,EACtBa,EAAvByE,YAD6C,MACtC,EADsC,EACnCf,EAAa1D,EAAb0D,SAGZ5F,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAkB,kBAAMD,EAAQ2I,eAAc,CAAC3I,IAM5D,OALAa,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAK4F,KAAKlG,MAAQkG,IAAO,CAAC5F,EAAM4F,IAGpD,cAAC,EAAD,CAAM7F,GAAIA,EAAI+D,OAAQ,CAAC,QAAS,QAASC,QAAS,CAAC,UAAWC,MAAK,gBAAW4B,GAAQtF,KAAMA,EAA5F,SACGoE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,IACJC,IAAI,KACJG,KAAK,OACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEe,MAAOR,EAAEC,OAAO3F,SAC1CA,MAAOkG,UASNjC,UAAMC,KAAK+D,GChC1B,SAASE,EAAT,GAAwE,IAAlD1G,EAAiD,EAAjDA,KAAMpB,EAA2C,EAA3CA,GAAI2E,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BrE,KAA6B,EACJa,EAAzDwE,cAD6D,MACpD,EADoD,IACJxE,EAA7C0E,iBADiD,MACrC,IADqC,EAChChB,EAA4B1D,EAA5B0D,SADgC,EACJ1D,EAAlBb,YADsB,MACf,OADe,EAI/DrB,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAwB,kBAAMD,EAAQ6I,qBAAoB,CAAC7I,IAYxE,OAXAkB,qBAAU,WAER,OADAH,EAAK6G,QACE,kBAAM7G,EAAK8G,UACjB,CAAC9G,IACJF,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAK2F,OAAOjG,MAAZ,OAAoBiG,QAApB,IAAoBA,IAAU,IAAI,CAAC3F,EAAM2F,IAC/DxF,qBAAU,WAAYH,EAAK6F,UAAUnG,MAAf,OAAuBmG,QAAvB,IAAuBA,IAAa,MAAM,CAAC7F,EAAM6F,IACvE1F,qBAAU,WAAYH,EAAKM,KAAL,OAAYA,QAAZ,IAAYA,IAAQ,SAAS,CAACN,EAAMM,IAGxD,cAAC,EAAD,CACEP,GAAIA,EACJ+D,OAAQ,CAAC,SAAU,aACnBC,QAAS,CAAC,UACVC,MAAK,UAAK6B,EAAL,eAAqBvF,GAC1BA,KAAMqE,EALR,SAOGD,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,KAAM,IACND,IAAK,IACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEc,QAASP,EAAEC,OAAO3F,SAC5C4F,KAAM,EACNhF,KAAK,SACLZ,MAAOiG,MAGX,qBAAK1B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,IAAK,EACLD,IAAK,IACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEgB,WAAYT,EAAEC,OAAO3F,SAC/CY,KAAK,SACLZ,MAAOmG,MAGX,qBAAK5B,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEvE,KAAM8E,EAAEC,OAAO3F,SAAUA,MAAOY,EAAlE,UACE,wBAAQZ,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCASCiE,UAAMC,KAAKiE,GCpEpBE,EAAQ,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,KAQpE,SAASC,EAAmBC,GACjC,GAAIA,EAAU,GAAKA,EAAU,GAC3B,MAAM,IAAIC,WAAJ,8CAAsDD,IAIzD,SAASE,EAAiBC,EAAgBH,IAZ1C,SAA2BG,GAChC,GAAIA,EAAS,GAAKA,EAAS,GACzB,MAAM,IAAIF,WAAJ,8CAAsDE,IAW9DC,CAAkBD,GAClBJ,EAAmBC,GAGnB,OADW,QACCjD,KAAKC,IAAI,EAAGmD,EAASH,EAAU,IAGtC,SAASK,EAAYL,GAG1B,OAFAD,EAAmBC,GAEZF,EAAME,GCjBf,IAAMM,EAAsC,CAC1C7E,QAAS,eACT8E,UAAW,SACXlH,MAAO,GAEHmH,GAAiC,2BAClCF,GADkC,IAErCG,cAAe,QAEXC,GAAqC,2BACtCJ,GADsC,IAEzCK,UAAW,oBACXF,cAAe,UAGjB,SAASG,GAAT,GAA2C,IAA3BT,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,QAAkB,EACbK,EAAYL,GAASa,MAAM,IADd,mBACjCC,EADiC,KAC3BC,EAD2B,KAElCnD,EAAYsC,EAAiBC,EAAQH,GAE3C,OACE,iCACGc,EACD,uBAAOtF,MAAOgF,GAAd,SAA6BL,IAC5BY,GAAc,uBAAOvF,MAAOkF,GAAd,SAAiCK,IAChD,uCAAUnD,EAAUoD,QAAQ,GAA5B,aAKStF,WAAMC,KAAKiF,IC7B1B,SAASK,GAAT,GAA4E,IAAlD/H,EAAiD,EAAjDA,KAAMpB,EAA2C,EAA3CA,GAAI2E,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BrE,KAA6B,EACAa,EAAjEwE,cADiE,MACxD,EADwD,IACAxE,EAArDiH,cADqD,MAC5C,EAD4C,EACzCvD,EAAyC1D,EAAzC0D,SADyC,EACA1D,EAA/B8G,eAD+B,MACrB,EADqB,IACA9G,EAAlBb,YADkB,MACX,OADW,EAEnEuF,EAAYsC,EAAiBC,EAAQH,GAGrChJ,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAwB,kBAAMD,EAAQ6I,qBAAoB,CAAC7I,IAYxE,OAXAkB,qBAAU,WAER,OADAH,EAAK6G,QACE,kBAAM7G,EAAK8G,UACjB,CAAC9G,IACJF,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAK2F,OAAOjG,MAAZ,OAAoBiG,QAApB,IAAoBA,IAAU,IAAI,CAAC3F,EAAM2F,IAC/DxF,qBAAU,WAAYH,EAAK6F,UAAUnG,MAAQmG,IAAY,CAAC7F,EAAM6F,IAChE1F,qBAAU,WAAYH,EAAKM,KAAL,OAAYA,QAAZ,IAAYA,IAAQ,SAAS,CAACN,EAAMM,IAGxD,cAAC,EAAD,CACEP,GAAIA,EACJ+D,OAAQ,CAAC,UACTC,QAAS,CAAC,UACVC,MAAO,cAAC,GAAD,CAAMoE,OAAQA,EAAQH,QAASA,IACtC3H,KAAMqE,EALR,SAOGD,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVkB,KAAM,IACND,IAAK,IACLL,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEc,QAASP,EAAEC,OAAO3F,SAC5C4F,KAAM,EACN7B,MAAO,CAAEnC,MAAO,QAChBhB,KAAK,QACLZ,MAAOiG,MAGX,sBAAK1B,UAAU,kBAAf,UACE,wBAAQY,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEoD,SAAU7C,EAAEC,OAAO3F,SAAU+D,MAAO,CAAEnC,MAAO,OAAS5B,MAAOuI,EAA/F,SACG/B,MAAM,IACJE,KAAK,GACLlC,KAAI,SAACmC,EAAG4B,GAAJ,OACH,wBAAsBvI,MAAOuI,EAA7B,SACGK,EAAYL,IADFA,QAKnB,wBAAQpD,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEuD,QAAShD,EAAEC,OAAO3F,SAAU+D,MAAO,CAAEnC,MAAO,OAAS5B,MAAO0I,EAA9F,SACGlC,MAAM,IACJE,KAAK,GACLlC,KAAI,SAACmC,EAAG+B,GAAJ,OACH,wBAAqB1I,MAAO0I,EAA5B,SACGA,GADUA,WAMrB,qBAAKnE,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEvE,KAAM8E,EAAEC,OAAO3F,SAAU+D,MAAO,CAAEnC,MAAO,QAAU5B,MAAOY,EAA5F,UACE,wBAAQZ,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCCnEd,SAASyJ,GAAT,GAAgE,IAAxChI,EAAuC,EAAvCA,KAAMpB,EAAiC,EAAjCA,GAAI2E,EAA6B,EAA7BA,SAAUpE,EAAmB,EAAnBA,KAAmB,EAC/Ba,EAAtBiI,WADqD,MAC/C,EAD+C,EAC5CvE,EAAa1D,EAAb0D,SAGX5F,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAA0B,kBAAMD,EAAQoK,uBAAsB,CAACpK,IAM5E,OALAa,EAAQC,EAAIC,GAGZG,qBAAU,WAAYH,EAAKoJ,IAAI1J,MAAQ0J,IAAM,CAACpJ,EAAMoJ,IAGlD,cAAC,EAAD,CACErJ,GAAIA,EACJ+D,OAAQ,CAAC,QAAS,OAClBC,QAAS,CAAC,UACVC,MAAK,kBAAagB,KAAKsE,IAAU,IAANF,GAAWH,QAAQ,GAAzC,aAAgDG,EAAM,EAAI,QAAUA,EAAM,EAAI,OAAS,IAC5F9I,KAAMA,EALR,SAOGoE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV3D,KAAK,QACL4E,IAAI,IACJC,IAAI,KACJG,KAAK,OACLT,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAEuE,KAAMhE,EAAEC,OAAO3F,SACzCA,MAAO0J,UCnBrB,SAASG,GAAT,GAA8D,IAAD,EAAvCpI,EAAuC,EAAvCA,KAAMpB,EAAiC,EAAjCA,GAAI2E,EAA6B,EAA7BA,SAAUpE,EAAmB,EAAnBA,KAChCuE,EAAyB1D,EAAzB0D,SAAU2E,EAAerI,EAAfqI,WADyC,EAE7BC,mBAAQ,UAACtI,EAAKuI,eAAN,QAXxB,6OAS6C,mBAEpDA,EAFoD,KAE3CC,EAF2C,OAGXF,mBAASC,GAHE,mBAGpDE,EAHoD,KAGlCC,EAHkC,KAMrD5K,EAAUY,qBAAWhB,GACrBmB,EAAOd,mBAAwB,kBAAMD,EAAQ6K,qBAAoB,CAAC7K,IACxEa,EAAQC,EAAIC,GAEZ,IAAM+J,EAAQ7K,mBAAQ,WACpB,IAAM6K,EAAQ,IAAIC,aAAa/K,EAAQgL,YAEvC,OAAO,IAAIC,SAAS,QAASN,EAAtB,CAAwCG,KAC9C,CAAC9K,EAAQgL,WAAYL,IAGxBzJ,qBAAU,WAAYH,EAAK+J,MAAQA,IAAQ,CAAC/J,EAAM+J,IAClD5J,qBAAU,WAAYH,EAAKwJ,WAAaA,IAAa,CAACxJ,EAAMwJ,IAE5D,IAAMW,EAAc7K,uBAAY,WAC9B,IAEE,IAAI4K,SAAS,QAASR,EAAtB,CAA+B,IAAIM,aAAa/K,EAAQgL,aAExDJ,EAAoBH,GACpB7E,EAAS,CAAE6E,YACX,MAAOtE,GACPgF,QAAQC,MAAMjF,MAEf,CAACnG,EAAQgL,WAAYP,EAAS7E,IAEjC,OACE,cAAC,EAAD,CAAM9E,GAAIA,EAAI+D,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWzD,KAAMA,EAA5D,SACGoE,GACC,sBAAKT,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAkBR,MAAO,CAAE6G,SAAU,QAApD,UACE,0BACErG,UAAU,SACVY,SAAU,SAAAO,GAAC,OAAIuE,EAAWvE,EAAEC,OAAO3F,QACnC6K,KAAM,EACN9G,MAAO,CAAEnC,MAAO,QAChB5B,MAAOgK,IAET,wBAAQlK,QAAS2K,EAAjB,qBAEF,qBAAKlG,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAO,GAAC,OAAIP,EAAS,CAAE2E,WAAYpE,EAAEC,OAAO3F,SAAUA,MAAO8J,EAAxE,UACE,wBAAQ9J,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,0BC9Dd,SAAS8K,GAAgBC,GAAyB,IAAD,IAC/C,QAAO,oBAAEA,EAAOC,MAAM,kBAAf,aAAE,EAA0B,UAA5B,QAAkC,GCmC3C,IAAMC,GAAY,CAChBlG,SAAUA,EACViB,aAAcA,EACdM,cAAeA,EACfO,gBAAiBA,EACjBG,eAAgBA,EAChBK,MAAOA,EACPG,YAAaA,EACbE,mBAAoBA,EACpBO,KAAMA,EACNE,WAAYA,EACZqB,eJ+BavF,IAAMC,KAAKsF,II9BxBC,aHRaxF,IAAMC,KAAKuF,IGSxBI,WFsBa5F,IAAMC,KAAK2F,K,SEnBXqB,G,mFAAf,WAAmCC,EAA2BC,GAA9D,eAAAC,EAAA,sDACQC,EAAuBH,EAAgBI,OAAOC,KAAQC,QAAgC,SAACC,EAASC,GAGpG,OAFAD,EAAQC,EAAKC,SAAU,EACvBF,EAAQC,EAAKhG,SAAU,EAChB+F,IACN,IALL,WAMSG,OAAOC,KAAKR,GAAsBxJ,OAN3C,uBAOI+J,OAAOC,KAAKV,GAAYW,SAAQ,SAAAC,UACvBV,EAAqBU,MARlC,SAUU,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,MAVrD,kE,sBAeA,SAASE,GAAT,GAAkF,IAAxDjB,EAAuD,EAAjEkB,SAAsCC,EAA2B,EAAtCpD,UAAsC,EAC3CjF,IAAM8F,UAAS,GAD4B,mBACxEwC,EADwE,KAC5DC,EAD4D,OAErCvI,IAAM8F,WAF+B,mBAExE0C,EAFwE,KAEzDC,EAFyD,OAG/BzI,IAAM8F,SAAc,MAHW,mBAGxE4C,EAHwE,KAGtDC,EAHsD,OAIhDC,YAAUF,EAAkBF,EAAe,CACxEK,UAAW,iBADLC,EAJuE,EAIvEA,OAAQC,EAJ+D,EAI/DA,WAGV9D,EAAY+D,aAAc,SAAAC,GAAK,OAAIA,EAAMhE,aAPgC,EAS/Ca,mBAAmBoB,GAT4B,mBASxEkB,EATwE,KAS9Dc,EAT8D,KAUhE/B,EAAelL,IAAtBkN,MAEFC,ED1ED,WAAyB,IACtBD,EAAUlN,IAAVkN,MAER,OAAOxN,uBACL,SAAC0N,GAGC,GAFA5C,QAAQ6C,IAAI,qBAAsBD,GAE7BA,EAAW1B,QAAW0B,EAAW3H,QAAW2H,EAAWE,cAAiBF,EAAWG,aAAxF,CAIA,IAAM7B,EAASwB,EAAME,EAAW1B,QAC1BjG,EAASyH,EAAME,EAAW3H,QAC1B6H,EAAeF,EAAWE,aAC1BC,EAAeH,EAAWG,aAC1BC,EAAc5C,GAAgB0C,GAC9BG,EAAa7C,GAAgB2C,GAG/BA,EAAaG,WAAW,SAC1BhC,EAAOiC,QAAQlI,EAAQ+H,EAAaC,GAKpC/B,EAAOiC,QAAQlI,EAAO8H,GAAeC,MAGzC,CAACN,IC8CuBU,GACpBC,ED1CD,WAA4B,IACzBX,EAAUlN,IAAVkN,MAER,OAAOxN,uBACL,SAAC+L,GAGC,GAFAjB,QAAQ6C,IAAI,qBAAsB5B,GAE7BA,EAAKC,QAAWD,EAAKhG,QAAWgG,EAAK6B,cAAiB7B,EAAK8B,aAAhE,CAIA,IAAM7B,EAASwB,EAAMzB,EAAKC,QACpBjG,EAASyH,EAAMzB,EAAKhG,QACpB6H,EAAe7B,EAAK6B,aACpBC,EAAe9B,EAAK8B,aACpBC,EAAc5C,GAAgB0C,GAC9BG,EAAa7C,GAAgB2C,GAG/BA,EAAaG,WAAW,SAC1BhC,EAAOoC,WAAWrI,EAAQ+H,EAAaC,GAKvC/B,EAAOoC,WAAWrI,EAAO8H,GAAeC,MAG5C,CAACN,ICckBa,GACfC,EDVD,WAA4B,IACzBd,EAAUlN,IAAVkN,MAER,OAAOxN,uBACL,SAACoM,GACCtB,QAAQ6C,IAAI,eAAgBvB,EAAQoB,GAEpC,IAAM9M,EAAO8M,EAAMpB,GAEd1L,GAILA,EAAK0N,eAEP,CAACZ,ICLkBe,GAEfC,EAAiB,SAAC/N,GAAD,OAAgB,SAACoB,GACtC0L,EACEkB,aAAQ,SAACC,GACP,IAAMhO,EAAOgO,EAAM/C,OAAOgD,KAAQC,MAAK,SAAAC,GAAO,OAAIA,EAAQpO,KAAOA,KAC5DC,GAGLuL,OAAOC,KAAKrK,GAAMsK,SAAQ,SAAA2C,GAAQ,OAAKpO,EAAKmB,KAAKiN,GAAYjN,EAAKiN,YAKlEC,EAAM,uCAAG,WAAOC,GAAP,SAAAvD,EAAA,6DACbuD,EAAkBC,aAAavC,GAG/Ba,EACEkB,aAAQ,SAACC,GACPA,EAAM/C,OAAOgD,KAAQxC,SAAQ,SAAAzL,GAC3BA,EAAKmB,KAAK0D,SAAWiJ,EAAe9N,EAAKD,WAPlC,SAcP6K,GAAoBC,EAAiBC,GAd9B,OAeCD,EAAgBI,OAAOC,KAC/BO,SAAQ,SAAAJ,GAAI,OAAI0B,EAAkB1B,MAhB3B,2CAAH,sDAuBNmD,EAAmBlP,uBACvB,SAACmP,GACCA,EAAiBxD,OAAOC,KAAQO,SAAQ,SAAAJ,GAAI,OAAIoC,EAAapC,MAC7DoD,EAAiBxD,OAAOgD,KAAQxC,SAAQ,SAAAzL,GAAI,OAAI4N,EAAa5N,EAAKD,OAElE8M,GAAY,SAAAd,GAAQ,OAAI2C,YAAeD,EAAkB1C,QAE3D,CAAC0B,EAAcG,IAsCX3N,EAAUX,uBACd,SAACgB,GACC,IAAMP,EAAE,UAAMO,EAAN,YAAcqO,eAMhB3O,EAAO,CACXD,KACAoB,KAAM,CAAE0D,SAPOiJ,EAAe/N,IAQ9BO,OACA8D,SARe,CACfhD,GAAIiL,EAAiBuC,wBAAwBC,KAAOjG,EAAU,IAAMA,EAAU,GAC9E3G,GAAIoK,EAAiBuC,wBAAwBE,IAAMlG,EAAU,IAAMA,EAAU,KAQ/EiE,GAAY,SAAAd,GAAQ,4BAAQA,GAAR,CAAkB/L,OACtCkM,GAAc,KAEhB,CAACtD,EAAWyD,IAGd,OACE,qCACE,eAAC,IAAD,CACE0C,gBAAiB,CAAC/C,EAAiB5K,EAAG4K,EAAiB/J,GACvD+M,YAAahD,EAAiBiD,KAC9BlD,SAAUA,EACVpB,UAAWA,GACXuE,UA5EY,SAACC,GACjBtC,GAAY,SAAAd,GAAQ,OAAIqD,YAAQD,EAAQpD,MACxCgB,EAAkBoC,IA2EdE,aAhEe,SAACC,EAAeC,GACnC9B,EAAa6B,GACbzC,GAAY,SAAAd,GAAQ,OAAI2C,YAAe,CAACY,GAAUvD,MAClDc,GAAY,SAAAd,GAAQ,OAAIqD,YAAQG,EAAexD,MAC/CgB,EAAkBwC,IA6Ddf,iBAAkBA,EAClBH,OAAQA,EACRmB,eA5DiB,SAACC,EAA8CC,GACpE7C,EACEkB,aAAQ,SAACC,GACP,IAAMhO,EAAOgO,EAAM/C,OAAOgD,KAAQC,MAAK,SAAAC,GAAO,OAAIA,EAAQpO,KAAO2P,EAAY3P,MACxEC,IAGLA,EAAKoE,SAAWsL,EAAYtL,eAsD5BuL,YAjDc,SAACF,GACnBvD,KAAe,OAACC,QAAD,IAACA,OAAD,EAACA,EAAeyD,SAASH,EAAMpK,WAiD1CwK,kBA9CoB,SAACJ,GACzBA,EAAMK,iBACN5D,GAAc,GACdI,EAAoB,CAClBsC,sBAAuB,iBAAO,CAC5BE,IAAsC,GAAjC9J,KAAK+K,MAAMN,EAAMO,QAAU,IAChCnB,KAAuC,GAAjC7J,KAAK+K,MAAMN,EAAMQ,QAAU,IACjC5O,OAAQ,EACRC,MAAO,OAuCP4O,2BAA2B,EAC3BC,YAAU,EACVC,SAAU,CAAC,GAAI,IAEf3M,MAAO,CAAE4M,OAAQ,GAhBnB,UAkBE,cAAC,IAAD,CAAYC,IAAK,KACjB,cAAC,IAAD,OAGDrE,GACC,6CAAKzI,IAAK,SAAAxD,GAAI,OAAIA,GAAQoM,EAAiBpM,IAAOyD,MAAOgJ,EAAO8D,QAAY7D,EAAW6D,QAAvF,aACE,qBAAItM,UAAU,cAAd,UACE,oBAAIzE,QAAS,kBAAMS,EAAQ,aAA3B,0BACA,oBAAIT,QAAS,kBAAMS,EAAQ,iBAA3B,+BACA,oBAAIT,QAAS,kBAAMS,EAAQ,kBAA3B,gCACA,oBAAIT,QAAS,kBAAMS,EAAQ,oBAA3B,kCACA,oBAAIT,QAAS,kBAAMS,EAAQ,mBAA3B,iCACA,oBAAIT,QAAS,kBAAMS,EAAQ,UAA3B,uBACA,oBAAIT,QAAS,kBAAMS,EAAQ,gBAA3B,6BACA,oBAAIT,QAAS,kBAAMS,EAAQ,uBAA3B,qCACA,oBAAIT,QAAS,kBAAMS,EAAQ,SAA3B,sBACA,oBAAIT,QAAS,kBAAMS,EAAQ,eAA3B,4BACA,oBAAIT,QAAS,kBAAMS,EAAQ,mBAA3B,iCACA,oBAAIT,QAAS,kBAAMS,EAAQ,iBAA3B,+BACA,oBAAIT,QAAS,kBAAMS,EAAQ,eAA3B,sCAQG0D,WAAMC,KAAKkI,IC3NpB0E,GAAsC,CAC1CC,SAAU,GACVpP,OAAQ,OACRqP,OAAQ,OACRpP,MAAO,QAGHqP,GAAsC,CAC1CjN,QAAS,OACTU,SAAU,WACVwM,MAAO,OACP9B,KAAM,GACNlG,UAAW,iBACXiI,gBAAiB,gBAcNC,GAAoB,iBAAO,CACtC/Q,GAAI4O,cACJ5C,SAAU,GACVnD,UAAW,CACTxH,EAAG,EACHa,EAAG,EACHgN,KAAM,KA0FK8B,OAtFf,YAAyC,IAAtBC,EAAqB,EAArBA,WACTC,EAAgBrR,IAAhBqR,YAD8B,EAERxH,oBAAS,GAFD,mBAE/ByH,EAF+B,KAEtBC,EAFsB,KAGhCpF,EAAWY,aAAc,SAAAC,GAAK,OAAIA,EAAMb,YACxCnD,EAAY+D,aAAc,SAAAC,GAAK,OAAIA,EAAMhE,aACzCwI,EAAiBrF,EAAS7H,KAAI,SAAAiK,GAAO,kCACtCA,GADsC,IAEzCkD,UAAMC,OAEFC,EAAkB,CACtBnQ,EAAGwH,EAAU,GACb3G,EAAG2G,EAAU,GACbqG,KAAMrG,EAAU,IAEZ4I,EAAUC,KAAKC,UAAU,CAC7B3F,SAAUqF,EACVxI,UAAW2I,IAEPI,EAAezS,mBAAQ,kBAvCP,SAACgS,GAAD,MAA4C,CAClE7P,OAAQ,OACRuQ,QAAS,GACTxN,SAAU,WACVwM,MAAO,EACP9B,IAAK,EACLlG,UAAWsI,EAAU,gBAAkB,mBACvCW,WAAY,sBACZvQ,MAAO,KA+B4BwQ,CAAgBZ,KAAU,CAACA,IAG9D/Q,qBAAU,WACR,IAAMqR,EAAUO,KAAK5S,OAAO6S,SAASC,KAAKC,OAAO,IACjD,IAAK,IAAD,EAC8BT,KAAKU,MAAMX,GAAnCzF,EADN,EACMA,SAAUnD,EADhB,EACgBA,UAClBoI,EAAW,CACTjF,WACAhM,GAAI4O,cACJ/F,cAEF,MAAOxD,GACPgF,QAAQC,MAAMjF,MAEf,CAAC4L,IAGJ7Q,qBAAU,WACRhB,OAAO6S,SAASC,KAAOG,KAAKZ,KAC3B,CAACA,IAEJ,IAAM3M,EAAWvF,uBACf,SAAC8F,GACC,IAAK,IAAD,EAC8BqM,KAAKU,MAAM/M,EAAEC,OAAO3F,OAA5CqM,EADN,EACMA,SAAUnD,EADhB,EACgBA,UAClBoI,EAAW,CACTjF,WACAhM,GAAI4O,cACJ/F,cAEF,MAAOxD,GACPgF,QAAQC,MAAMjF,MAGlB,CAAC4L,IAGGqB,EAAe/S,uBAAY,WAC/B2R,IACAD,EAAWF,MACV,CAACG,EAAaD,IACXsB,EAAsBhT,uBAAY,kBAAM6R,GAAW,SAAAD,GAAO,OAAKA,OAAU,IAE/E,OACE,sBAAKzN,MAAOkO,EAAZ,UACE,0BACE9M,SAAUA,EACVpB,MAAO+M,GACP9Q,MAAO+R,KAAKC,UACV,CACE3F,SAAUqF,EACVxI,UAAW2I,GAEb,KACA,KAGJ,sBAAK9N,MAAOkN,GAAZ,UACE,wBAAQnR,QAAS6S,EAAc5O,MAAO,CAAE8O,YAAa,IAArD,mBAGA,wBAAQ/S,QAAS8S,EAAjB,SAAuCpB,EAAU,OAAS,gBCjGnDsB,OA5Bf,YAAqC,IAApBxT,EAAmB,EAAnBA,SACT8N,EAAQrM,iBAAiC,IACzCxB,EAA2BC,mBAC/B,iBAAO,CACLe,QAAS,SAACF,EAAIC,GACZ8M,EAAM/L,QAAQhB,GAAMC,GAEtB8M,MAAOA,EAAM/L,QACbb,WAAY,SAAAH,UACH+M,EAAM/L,QAAQhB,IAEvBkR,YAAa,WACX,IAAMnG,EAAaS,OAAOC,KAAKsB,EAAM/L,SAASmD,KAAI,SAAAnE,GAAE,OAAI+M,EAAM/L,QAAQhB,MACtE+K,EAAWW,SAAQ,SAAAzL,GAAI,0BAAK,EAAAA,GAAa8G,YAAlB,aAAI,aAC3BgE,EAAWW,SAAQ,SAAAzL,GAAI,OAAIA,EAAK0N,gBAChCZ,EAAM/L,QAAU,OAGpB,IAGF,OACE,8BACE,cAACpB,EAAYF,SAAb,CAAsBC,MAAOT,EAA7B,SAAuCD,OCA9ByT,OAvBf,WAAgB,IAAD,EACiBhJ,mBAAuBqH,IADxC,mBACNU,EADM,KACGR,EADH,KAGb,OACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,sBACEvN,MAAO,CACL+B,WAAY,UACZ9B,QAAS,OACTrC,OAAQ,SAJZ,UAOE,cAAC,GAAD,CAAuB0K,SAAUyF,EAAQzF,SAAUnD,UAAW4I,EAAQ5I,WAA3D4I,EAAQzR,IACnB,cAAC,GAAD,CAASiR,WAAYA,cCRlB0B,GAZS,SAACC,GACnBA,GAAeA,aAAuBzI,UACxC,6BAAqB0I,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.8baf6bb4.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext, useEffect } from \"react\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  nodes: Record<string, AudioNode>;\n  removeNode: (id: string) => void;\n  removeNodes: () => void;\n};\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode(id: string, node: AudioNode) {\n  const { addNode, removeNode } = useNodeContext();\n\n  useEffect(() => {\n    addNode(id, node);\n    return () => {\n      removeNode(id);\n    };\n  }, [addNode, node, id, removeNode]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AnalyserNode>(() => context.createAnalyser(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"11\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<BiquadFilterNode>(() => context.createBiquadFilter(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","import React, { useContext, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// TODO add option to change number of inputs, now it only works in stereo\nfunction ChannelMerger({ id, type }: NodeProps) {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ChannelMergerNode>(() => context.createChannelMerger(2), [context]);\n  useNode(id, node);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    />\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React, { useContext, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// TODO add option to change number of outputs, now it only works in stereo\nfunction ChannelSplitter({ id, type }: NodeProps) {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ChannelSplitterNode>(() => context.createChannelSplitter(2), [context]);\n  useNode(id, node);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    />\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ConstantSourceNode>(() => context.createConstantSource(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DelayNode>(() => context.createDelay(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useContext } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = context.destination;\n  useNode(id, node);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DynamicsCompressorNode>(() => context.createDynamicsCompressor(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gain({ data, id, selected, type }: NodeProps) {\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<GainNode>(() => context.createGain(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<StereoPannerNode>(() => context.createStereoPanner(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<WaveShaperNode>(() => context.createWaveShaper(), [context]);\n  useNode(id, node);\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (connection: Edge | Connection) => {\n      console.log(\"Connection created\", connection);\n\n      if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n        return;\n      }\n\n      const source = nodes[connection.source];\n      const target = nodes[connection.target];\n      const sourceHandle = connection.sourceHandle;\n      const targetHandle = connection.targetHandle;\n      const outputIndex = getChannelIndex(sourceHandle);\n      const inputIndex = getChannelIndex(targetHandle);\n\n      // connect AudioNode\n      if (targetHandle.startsWith(\"input\")) {\n        source.connect(target, outputIndex, inputIndex);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.connect(target[targetHandle], outputIndex);\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (edge: Edge) => {\n      console.log(\"Connection removed\", edge);\n\n      if (!edge.source || !edge.target || !edge.sourceHandle || !edge.targetHandle) {\n        return;\n      }\n\n      const source = nodes[edge.source];\n      const target = nodes[edge.target];\n      const sourceHandle = edge.sourceHandle;\n      const targetHandle = edge.targetHandle;\n      const outputIndex = getChannelIndex(sourceHandle);\n      const inputIndex = getChannelIndex(targetHandle);\n\n      // disconnect AudioNode\n      if (targetHandle.startsWith(\"input\")) {\n        source.disconnect(target, outputIndex, inputIndex);\n      }\n      // disconnect AudioParam\n      else {\n        // @ts-ignore\n        source.disconnect(target[targetHandle], outputIndex);\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (nodeId: string) => {\n      console.log(\"Node removed\", nodeId, nodes);\n\n      const node = nodes[nodeId];\n\n      if (!node) {\n        return;\n      }\n\n      node.disconnect();\n    },\n    [nodes]\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  FlowTransform,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Gain from \"components/nodes/Gain\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n  transform: FlowTransform;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Gain: Gain,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nfunction Flow({ elements: initialElements, transform: initialTransform }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const onLoad = async (reactFlowInstance: ReactFlowInstance) => {\n    reactFlowInstance.setTransform(initialTransform);\n\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(params, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = draggedNode.position;\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: Math.floor(event.clientY / 10) * 10,\n        left: Math.floor(event.clientX / 10) * 10,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: (virtualReference.getBoundingClientRect().left - transform[0]) / transform[2],\n        y: (virtualReference.getBoundingClientRect().top - transform[1]) / transform[2],\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[initialTransform.x, initialTransform.y]}\n        defaultZoom={initialTransform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[10, 10]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={10} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ChannelMerger\")}>Add Channel Merger</li>\n            <li onClick={() => addNode(\"ChannelSplitter\")}>Add Channel Splitter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n            <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n            <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStoreState, Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project({ setProject }: Props) {\n  const { removeNodes } = useNodeContext();\n  const [visible, setVisible] = useState(false);\n  const elements = useStoreState(store => store.elements);\n  const transform = useStoreState(store => store.transform);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const mappedTransform = {\n    x: transform[0],\n    y: transform[1],\n    zoom: transform[2],\n  };\n  const project = JSON.stringify({\n    elements: mappedElements,\n    transform: mappedTransform,\n  });\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, transform } = JSON.parse(project);\n      setProject({\n        elements,\n        id: uuidv4(),\n        transform,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, transform } = JSON.parse(e.target.value);\n        setProject({\n          elements,\n          id: uuidv4(),\n          transform,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  const clearProject = useCallback(() => {\n    removeNodes();\n    setProject(getDefaultProject);\n  }, [removeNodes, setProject]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: mappedElements,\n            transform: mappedTransform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      nodes: nodes.current,\n      removeNode: id => {\n        delete nodes.current[id];\n      },\n      removeNodes: () => {\n        const audioNodes = Object.keys(nodes.current).map(id => nodes.current[id]);\n        audioNodes.forEach(node => (node as any).stop?.());\n        audioNodes.forEach(node => node.disconnect());\n        nodes.current = {};\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>(getDefaultProject);\n\n  return (\n    <Audio>\n      <Nodes>\n        <ReactFlowProvider>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} transform={project.transform} />\n            <Project setProject={setProject} />\n          </div>\n        </ReactFlowProvider>\n      </Nodes>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}