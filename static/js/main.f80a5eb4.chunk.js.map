{"version":3,"sources":["worklets/gate-processor.worklet.ts","context/AudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","context/ProjectContext.tsx","components/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/FlowContextMenu.tsx","components/controls/Slider.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","utils/notes.ts","components/nodes/Keyboard.tsx","components/nodes/Metronome.tsx","components/nodes/Noise.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","window","webkitAudioContext","useEffect","awaitAudioWorkletProcessors","a","audioWorklet","addModule","GateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","type","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","data","x","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","memo","ProjectContext","useProject","Node","inputs","outputs","title","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","position","GRID_SIZE","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","Analyser","selected","nodeType","fftSizeExp","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","alignItems","checked","BiquadFilterType","BiquadFilter","detune","gain","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","channel","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","DelayEffect","feedback","mix","createGain","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Envelope","attackTime","decayTime","releaseTime","sustainLevel","sustainOn","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","gate","AudioWorkletNode","triggerOn","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","triggerOff","releaseTimeUsed","gateTrigger","message","port","onmessage","envelope","meta","sustainTime","scale","arc","drawEnvelope","FlowContextMenu","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","Gain","toFixed","Linear","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","keyBlack","keyWhite","Keyboard","setNote","noteFrequency","playNote","stopNote","onMouseLeave","onMouseEnter","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","buffer","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","floor","maxGain","gainAttack","sin","createBufferSource","loop","loopEnd","toggleNote","n","concat","Whole","Half","Eight","Sixteenth","color","generateWhiteNoise","bufferSize","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","generator","brown","pink","Oscillator","createOscillator","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","nodeTypes","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","reduce","nodeIds","nodeId","Promise","resolve","setTimeout","snapToGrid","Flow","setTransform","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","produce","draft","isNode","onMoveEnd","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","defaultPosition","defaultZoom","onlyRenderVisibleElements","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80a5eb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"a0986bdee6ebf67ad863.worklet.js\";","import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      await context.audioWorklet.addModule(GateWorkletProcessor);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={inputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={outputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ feedback: +e.target.value })}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface EnvelopeNode extends Required<ComplexAudioNode<GainNode, GainNode>> {\n  gate: AudioWorkletNode;\n}\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const { attackTime = 0.2, decayTime = 0.1, onChange, releaseTime = 0.6, sustainLevel = 0.7, sustainOn = true } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const gain = context.createGain();\n    const gate = new AudioWorkletNode(context, \"gate-processor\");\n\n    return {\n      gate,\n      input: gain,\n      output: gain,\n    };\n  }) as unknown) as EnvelopeNode;\n\n  // AudioParam\n  useEffect(() => void node.output.gain.setTargetAtTime(0, node.output.context.currentTime, 0.015), [node]);\n\n  const triggerOn = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOnEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(0, currentTime);\n    node.output.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n    node.output.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n    if (!sustainOn) {\n      node.output.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n    }\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  const triggerOff = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOffEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(node.output.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.output.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const gateTrigger = useCallback(\n    ({ data: message }: MessageEvent) => {\n      if (message === \"gateOn\") {\n        triggerOn();\n      } else if (message === \"gateOff\") {\n        triggerOff();\n      }\n    },\n    [triggerOff, triggerOn]\n  );\n  useEffect(() => {\n    node.gate.port.onmessage = gateTrigger;\n  }, [node, gateTrigger]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.output.context.currentTime,\n        gain: node.output.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gate\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={attackTime}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              type=\"number\"\n              step={0.05}\n              style={{ width: \"25%\" }}\n              value={decayTime}\n            />\n            <input\n              className=\"nodrag\"\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={sustainLevel}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n      <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n      <li onClick={() => addNode(\"ChannelMerger\")}>Add Channel Merger</li>\n      <li onClick={() => addNode(\"ChannelSplitter\")}>Add Channel Splitter</li>\n      <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n      <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n      <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n      <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n      <li onClick={() => addNode(\"Envelope\")}>Add Envelope</li>\n      <li onClick={() => addNode(\"DelayEffect\")}>Add DelayEffect</li>\n      <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n      <li onClick={() => addNode(\"Gate\")}>Add Gate</li>\n      <li onClick={() => addNode(\"Keyboard\")}>Add Keyboard</li>\n      <li onClick={() => addNode(\"Metronome\")}>Add Metronome</li>\n      <li onClick={() => addNode(\"Noise\")}>Add Noise</li>\n      <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n      <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n      <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n      <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useCallback } from \"react\";\n\ninterface Props {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input className=\"nodrag\" type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain.toFixed(3)}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Slider onChange={value => onChange({ gain: value })} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\ninterface KeyboardNode extends ComplexAudioNode<undefined, undefined> {\n  gate: ConstantSourceNode;\n  frequency: ConstantSourceNode;\n}\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { octave = 2, onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    // Interface\n    const gate = context.createConstantSource();\n    const frequency = context.createConstantSource();\n\n    return {\n      frequency,\n      gate,\n      input: undefined,\n      output: undefined,\n    };\n  }) as unknown) as KeyboardNode;\n  useEffect(() => {\n    node.frequency.offset.value = 0;\n    node.frequency.start();\n    node.gate.offset.value = 0;\n    node.gate.start();\n\n    return () => {\n      node.gate.disconnect();\n      node.gate.stop();\n      node.frequency.disconnect();\n      node.frequency.stop();\n    };\n  }, [node]);\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = node.frequency;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      node.frequency.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [node]\n  );\n  const playNote = useCallback(() => void (node.gate.offset.value = 1), [node]);\n  const stopNote = useCallback(() => void (node.gate.offset.value = 0), [node]);\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_item nodrag\">\n        <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 9)}>\n            1\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave - 1, 10)}>\n            2\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 11)}>\n            3\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 0)}>\n            4\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 1)}>\n            5\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 2)}>\n            6\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 3)}>\n            7\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 4)}>\n            8\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 5)}>\n            9\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 6)}>\n            10\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 7)}>\n            11\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 8)}>\n            12\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 9)}>\n            13\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 10)}>\n            14\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 11)}>\n            15\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave + 1, 0)}>\n            16\n          </button>\n        </div>\n      </div>\n      <div className=\"customNode_item\">\n        <input\n          className=\"nodrag\"\n          min={1}\n          max={6}\n          onChange={e => onChange({ octave: +e.target.value })}\n          type=\"number\"\n          value={octave}\n        />\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              className=\"nodrag\"\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span className=\"nodrag\" style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = \"white\" } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      // Will create buffer with 5 seconds of noise\n      const bufferSize = 5 * context.sampleRate;\n      const generators = {\n        brown: generateBrownNoise,\n        pink: generatePinkNoise,\n        white: generateWhiteNoise,\n      };\n      const generator = generators[type as keyof typeof generators];\n      const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n      const node = context.createBufferSource();\n      node.buffer = buffer;\n      node.loop = true;\n\n      return node;\n    },\n    [type]\n  );\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"white\">white</option>\n              <option value=\"pink\">pink</option>\n              <option value=\"brown\">brown</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Gain: Gain,\n  Gate: Gate,\n  Keyboard: Keyboard,\n  Metronome: Metronome,\n  Noise: Noise,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}