{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","components/nodes/Analyser/Visualiser.tsx","hooks/useAnimationFrame.ts","components/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Gain.tsx","components/nodes/Oscillator.tsx","utils/notes.ts","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","nodeCleanup","node","stop","disconnect","Nodes","nodes","useRef","addNode","id","current","getNode","removeNode","removeNodes","Object","keys","map","forEach","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToNode","startsWith","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","useOnEdgeRemove","useNodeContext","edge","disconnectNodes","useContext","useNode","edges","useStoreState","store","useEffect","filter","Visualiser","paused","type","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","ref","style","display","React","memo","Node","inputs","outputs","title","className","input","position","Position","Left","output","Right","Analyser","selected","nodeType","fftSizeExp","onChange","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","alignItems","checked","BiquadFilter","detune","gain","frequency","Q","createBiquadFilter","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","_","channel","flexDirection","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Gain","createGain","Oscillator","createOscillator","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","toFixed","OscillatorNote","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","useState","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Float32Array","sampleRate","Function","updateCurve","flexWrap","rows","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","isEdge","reduce","nodeIds","nodeId","Promise","resolve","setTimeout","Flow","elements","initialTransform","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","setElements","onElementsConnect","useOnConnect","onEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","onLoad","reactFlowInstance","setTransform","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","defaultPosition","defaultZoom","zoom","onConnect","params","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","floor","clientY","clientX","onlyRenderVisibleElements","snapToGrid","snapGrid","zIndex","gap","popper","textareaStyles","fontSize","resize","controlsStyles","right","transformOrigin","getDefaultProject","Project","setProject","visible","setVisible","mappedElements","__rf","mappedTransform","project","JSON","stringify","drawerStyles","padding","transition","getDrawerStyles","atob","location","hash","substr","parse","btoa","clearProject","toggleProjectDrawer","marginRight","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1170cb4.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AudioNode) {\n  (node as any).stop?.();\n  node.disconnect();\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n      removeNodes: () => {\n        Object.keys(nodes.current)\n          .map(id => nodes.current[id])\n          .forEach(node => nodeCleanup(node));\n        nodes.current = {};\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToNode = connection.targetHandle.startsWith(\"input\");\n  const source = getNode(connection.source);\n  const target = getNode(connection.target);\n\n  return {\n    inputIndex: connectToNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: source,\n    target: connectToNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AudioNode) {\n  const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n\n  try {\n    // @ts-ignore\n    source.connect(target, outputIndex, inputIndex);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AudioNode) {\n  const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n\n  try {\n    // @ts-ignore\n    source.disconnect(target, outputIndex, inputIndex);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, useContext, useEffect } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes } from \"utils/handles\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  getNode: (id: string) => AudioNode;\n  nodes: Record<string, AudioNode>;\n  removeNode: (id: string) => void;\n  removeNodes: () => void;\n};\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode(id: string, node: AudioNode) {\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    edges.filter(edge => edge.source === id || edge.target === id).forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AnalyserNode>(() => context.createAnalyser(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"11\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<BiquadFilterNode>(() => context.createBiquadFilter(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React, { useContext, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ChannelMergerNode>(() => context.createChannelMerger(inputs), [context, inputs]);\n  useNode(id, node);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={inputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React, { useContext, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ChannelSplitterNode>(() => context.createChannelSplitter(outputs), [context, outputs]);\n  useNode(id, node);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={outputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ConstantSourceNode>(() => context.createConstantSource(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DelayNode>(() => context.createDelay(clampDelayTime(maxDelayTime)), [context, maxDelayTime]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={0.1}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useContext } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = context.destination;\n  useNode(id, node);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DynamicsCompressorNode>(() => context.createDynamicsCompressor(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gain({ data, id, selected, type }: NodeProps) {\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<GainNode>(() => context.createGain(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<StereoPannerNode>(() => context.createStereoPanner(), [context]);\n  useNode(id, node);\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<WaveShaperNode>(() => context.createWaveShaper(), [context]);\n  useNode(id, node);\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  FlowTransform,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Gain from \"components/nodes/Gain\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n  transform: FlowTransform;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Gain: Gain,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nfunction Flow({ elements: initialElements, transform: initialTransform }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const onLoad = async (reactFlowInstance: ReactFlowInstance) => {\n    reactFlowInstance.setTransform(initialTransform);\n\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(params, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = draggedNode.position;\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: Math.floor(event.clientY / 10) * 10,\n        left: Math.floor(event.clientX / 10) * 10,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: (virtualReference.getBoundingClientRect().left - transform[0]) / transform[2],\n        y: (virtualReference.getBoundingClientRect().top - transform[1]) / transform[2],\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[initialTransform.x, initialTransform.y]}\n        defaultZoom={initialTransform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[10, 10]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={10} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ChannelMerger\")}>Add Channel Merger</li>\n            <li onClick={() => addNode(\"ChannelSplitter\")}>Add Channel Splitter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n            <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n            <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStoreState, Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project({ setProject }: Props) {\n  const { removeNodes } = useNodeContext();\n  const [visible, setVisible] = useState(false);\n  const elements = useStoreState(store => store.elements);\n  const transform = useStoreState(store => store.transform);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const mappedTransform = {\n    x: transform[0],\n    y: transform[1],\n    zoom: transform[2],\n  };\n  const project = JSON.stringify({\n    elements: mappedElements,\n    transform: mappedTransform,\n  });\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, transform } = JSON.parse(project);\n      setProject({\n        elements,\n        id: uuidv4(),\n        transform,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, transform } = JSON.parse(e.target.value);\n        setProject({\n          elements,\n          id: uuidv4(),\n          transform,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  const clearProject = useCallback(() => {\n    removeNodes();\n    setProject(getDefaultProject);\n  }, [removeNodes, setProject]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: mappedElements,\n            transform: mappedTransform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>(getDefaultProject);\n\n  return (\n    <Audio>\n      <ReactFlowProvider>\n        <Nodes>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} transform={project.transform} />\n            <Project setProject={setProject} />\n          </div>\n        </Nodes>\n      </ReactFlowProvider>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}