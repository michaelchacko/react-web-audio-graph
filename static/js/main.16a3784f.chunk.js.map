{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/controls/Slider.tsx","components/nodes/Gain.tsx","utils/notes.ts","components/nodes/Metronome.tsx","components/nodes/Noise.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","nodeCleanup","node","isComplexAudioNode","input","stop","output","disconnect","Nodes","nodes","useRef","addNode","id","current","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToNode","startsWith","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","useOnEdgeRemove","useNodeContext","edge","disconnectNodes","useContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","useEffect","filter","forEach","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","type","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","ref","style","display","React","memo","Node","inputs","outputs","title","handleStyle","background","substr","className","map","position","Position","Left","Right","Analyser","selected","nodeType","fftSizeExp","onChange","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","alignItems","checked","BiquadFilterType","BiquadFilter","detune","gain","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","channel","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","DelayEffect","feedback","mix","createGain","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","TriggerType","Envelope","attackTime","decayTime","releaseTime","sustainLevel","sustainOn","triggerType","Manual","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","useState","trigger","setTrigger","triggerOn","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","triggerOff","repeat","releaseTimeUsed","automaticTrigger","getFloatTimeDomainData","Boolean","Automatic","envelope","meta","sustainTime","scale","arc","drawEnvelope","onMouseDown","onMouseUp","onKeyDown","onKeyUp","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","Gain","toFixed","Linear","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","buffer","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","noteFrequency","notesPerMeasure","phase","j","sample","floor","maxGain","gainAttack","sin","createBufferSource","loop","loopEnd","toggleNote","n","concat","Whole","Half","Eight","Sixteenth","color","generateWhiteNoise","bufferSize","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","generator","brown","pink","Oscillator","createOscillator","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","isEdge","reduce","nodeIds","nodeId","Promise","resolve","setTimeout","snapToGrid","Flow","elements","initialTransform","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","setElements","onElementsConnect","useOnConnect","onEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","getEdgeWithColor","params","assign","onLoad","reactFlowInstance","setTransform","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","defaultPosition","defaultZoom","zoom","onConnect","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","clientY","clientX","onlyRenderVisibleElements","snapGrid","zIndex","gap","popper","textareaStyles","resize","controlsStyles","right","transformOrigin","getDefaultProject","Project","setProject","visible","setVisible","mappedElements","__rf","mappedTransform","project","JSON","stringify","drawerStyles","transition","getDrawerStyles","atob","location","hash","parse","btoa","clearProject","toggleProjectDrawer","marginRight","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16a3784f.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToNode = connection.targetHandle.startsWith(\"input\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source)) {\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target)) {\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: source,\n    target: connectToNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input: Input;\n  output: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    edges.filter(edge => edge.source === id || edge.target === id).forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useMemo } from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={inputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={outputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={0.1}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ feedback: +e.target.value })}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\nenum TriggerType {\n  Automatic = \"automatic\" as any,\n  Manual = \"manual\" as any,\n}\n\ninterface EnvelopeNode extends ComplexAudioNode<AnalyserNode, GainNode> {}\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const {\n    attackTime = 0.2,\n    decayTime = 0.1,\n    onChange,\n    releaseTime = 0.6,\n    sustainLevel = 0.7,\n    sustainOn = true,\n    triggerType = TriggerType.Manual,\n  } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const [trigger, setTrigger] = useState(false);\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createAnalyser();\n    const output = context.createGain();\n\n    input.fftSize = 32;\n    input.connect(output);\n\n    return {\n      input,\n      output,\n    };\n  }) as unknown) as EnvelopeNode;\n\n  // AudioParam\n  useEffect(() => void node.output.gain.setTargetAtTime(0, node.output.context.currentTime, 0.015), [node]);\n\n  const triggerOn = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOnEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(0, currentTime);\n    node.output.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n    node.output.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n    if (!sustainOn) {\n      node.output.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n    }\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  // TODO\n  const triggerOff = useCallback(() => {}, []);\n\n  useEffect(() => {\n    if (trigger) {\n      triggerOn();\n    } else {\n      triggerOff();\n    }\n\n    return () => triggerOff();\n  }, [trigger, triggerOn, triggerOff]);\n\n  const start = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n\n      triggerOn();\n    },\n    [triggerOn]\n  );\n\n  const stop = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOffEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(node.output.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.output.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const automaticTrigger = useCallback(() => {\n    const bufferLength = node.input.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    node.input.getFloatTimeDomainData(dataArray);\n\n    // Naive lo-fi signal detection that triggers if any of the sample frames has any value other than zero\n    if (dataArray.filter(Boolean).length > 0) {\n      setTrigger(true);\n    } else {\n      setTrigger(false);\n    }\n  }, [node]);\n\n  const tick = useCallback(() => {\n    if (triggerType === TriggerType.Automatic) {\n      automaticTrigger();\n    }\n\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.output.context.currentTime,\n        gain: node.output.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, automaticTrigger, decayTime, releaseTime, sustainLevel, sustainOn, triggerType]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={start} onMouseUp={stop} onKeyDown={start} onKeyUp={stop}>\n          play\n        </button>\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ triggerType: e.target.value })} value={triggerType}>\n              <option value={TriggerType.Manual}>{TriggerType[TriggerType.Manual]}</option>\n              <option value={TriggerType.Automatic}>{TriggerType[TriggerType.Automatic]}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={attackTime}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              type=\"number\"\n              step={0.05}\n              style={{ width: \"25%\" }}\n              value={decayTime}\n            />\n            <input\n              className=\"nodrag\"\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={sustainLevel}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React, { useCallback } from \"react\";\n\ninterface Props {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input className=\"nodrag\" type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain.toFixed(3)}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Slider onChange={value => onChange({ gain: value })} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              className=\"nodrag\"\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span className=\"nodrag\" style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = \"white\" } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      // Will create buffer with 5 seconds of noise\n      const bufferSize = 5 * context.sampleRate;\n      const generators = {\n        brown: generateBrownNoise,\n        pink: generatePinkNoise,\n        white: generateWhiteNoise,\n      };\n      const generator = generators[type as keyof typeof generators];\n      const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n      const node = context.createBufferSource();\n      node.buffer = buffer;\n      node.loop = true;\n\n      return node;\n    },\n    [type]\n  );\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"white\">white</option>\n              <option value=\"pink\">pink</option>\n              <option value=\"brown\">brown</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  FlowTransform,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport Gain from \"components/nodes/Gain\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n  transform: FlowTransform;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Gain: Gain,\n  Metronome: Metronome,\n  Noise: Noise,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nconst GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow({ elements: initialElements, transform: initialTransform }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const getEdgeWithColor = (params: Edge | Connection) => {\n    if (!params.source) {\n      return params;\n    }\n\n    return Object.assign({}, params, {\n      style: {\n        stroke: `#${params.source.substr(-6)}`,\n      },\n    });\n  };\n\n  const onLoad = async (reactFlowInstance: ReactFlowInstance) => {\n    reactFlowInstance.setTransform(initialTransform);\n\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(getEdgeWithColor(params), elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(getEdgeWithColor(newConnection), elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = {\n          x: snapToGrid(draggedNode.position.x),\n          y: snapToGrid(draggedNode.position.y),\n        };\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: event.clientY,\n        left: event.clientX,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: snapToGrid((virtualReference.getBoundingClientRect().left - transform[0]) / transform[2]),\n        y: snapToGrid((virtualReference.getBoundingClientRect().top - transform[1]) / transform[2]),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[initialTransform.x, initialTransform.y]}\n        defaultZoom={initialTransform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ChannelMerger\")}>Add Channel Merger</li>\n            <li onClick={() => addNode(\"ChannelSplitter\")}>Add Channel Splitter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Envelope\")}>Add Envelope</li>\n            <li onClick={() => addNode(\"DelayEffect\")}>Add DelayEffect</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Metronome\")}>Add Metronome</li>\n            <li onClick={() => addNode(\"Noise\")}>Add Noise</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n            <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n            <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStoreState, Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project({ setProject }: Props) {\n  const [visible, setVisible] = useState(false);\n  const elements = useStoreState(store => store.elements);\n  const transform = useStoreState(store => store.transform);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const mappedTransform = {\n    x: transform[0],\n    y: transform[1],\n    zoom: transform[2],\n  };\n  const project = JSON.stringify({\n    elements: mappedElements,\n    transform: mappedTransform,\n  });\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, transform } = JSON.parse(project);\n      setProject({\n        elements,\n        id: uuidv4(),\n        transform,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, transform } = JSON.parse(e.target.value);\n        setProject({\n          elements,\n          id: uuidv4(),\n          transform,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  const clearProject = useCallback(() => {\n    setProject(getDefaultProject);\n  }, [setProject]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: mappedElements,\n            transform: mappedTransform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>(getDefaultProject);\n\n  return (\n    <Audio>\n      <ReactFlowProvider>\n        <Nodes>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} transform={project.transform} />\n            <Project setProject={setProject} />\n          </div>\n        </Nodes>\n      </ReactFlowProvider>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}