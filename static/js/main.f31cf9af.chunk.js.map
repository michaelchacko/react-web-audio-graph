{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","context/NodeContext.tsx","components/nodes/Analyser/Visualiser.tsx","hooks/useAnimationFrame.ts","components/nodes/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Gain.tsx","components/nodes/Oscillator.tsx","utils/notes.ts","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","utils/handles.ts","components/Project.tsx","components/Nodes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","NodeContext","useNodeContext","useContext","Visualiser","node","paused","type","canvasProps","audioData","useRef","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","current","getContext","DataType","TimeDomain","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","useAnimationFrame","ref","style","display","React","memo","Node","id","inputs","outputs","title","className","map","input","position","Position","Left","output","Right","Analyser","selected","nodeType","fftSizeExp","onChange","createAnalyser","addNode","fftSize","Math","pow","max","min","e","target","step","justifyContent","alignItems","checked","BiquadFilter","detune","gain","frequency","Q","createBiquadFilter","ConstantSource","offset","createConstantSource","start","stop","Delay","delayTime","createDelay","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Gain","createGain","Oscillator","createOscillator","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","pitchStyles","transform","Note","split","note","pitch","toFixed","OscillatorNote","Array","fill","_","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","useState","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Float32Array","sampleRate","Function","updateCurve","console","error","flexWrap","rows","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","filter","isEdge","reduce","nodeIds","edge","source","Object","keys","forEach","nodeId","Promise","resolve","setTimeout","Flow","elements","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","useStoreState","store","setElements","nodes","onElementsConnect","connection","log","targetHandle","connect","useOnConnect","onEdgeRemove","disconnect","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","onLoad","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","onConnect","params","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","floor","clientY","clientX","onlyRenderVisibleElements","snapToGrid","snapGrid","zIndex","gap","popper","Project","setProject","mappedElements","__rf","undefined","project","JSON","stringify","atob","location","hash","substr","parse","btoa","padding","fontSize","resize","Nodes","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEaA,EAAeC,wBAA4B,MCkCzCC,MA7Bf,YAAqC,IAApBC,EAAmB,EAAnBA,SACTC,EAAUC,mBAAQ,WACtB,IAME,OALKC,OAAON,eAEVM,OAAON,aAAeM,OAAOC,oBAGxB,IAAID,OAAON,aAClB,aACD,IAEGQ,EAASC,uBAAY,WACF,eAAZ,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASM,QACXN,EAAQI,WAET,CAACJ,IAEJ,OAAKA,EAKH,qBAAKO,QAASH,EAAd,SACE,cAACR,EAAaY,SAAd,CAAuBC,MAAOT,EAA9B,SAAwCD,MALnC,kG,+DCnBEW,EAAcb,wBAA+B,MAEnD,SAASc,IACd,OAAOC,qBAAWF,G,YC2CpB,SAASG,EAAT,GAAoE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAASC,EAAsB,wCAC3DC,EAAYC,iBAAO,IAAIC,WAAWN,EAAKO,oBACvCC,EAAYH,iBAA0B,MAEtCI,EAAOlB,uBAAY,WACvB,IAAMmB,EAASF,EAAUG,QACnBzB,EAAO,OAAGwB,QAAH,IAAGA,OAAH,EAAGA,EAAQE,WAAW,MAC9BF,GAAWxB,IAIZgB,IAASW,EAASC,WApD1B,SAA4B5B,EAAmC6B,GAC7D,IAAIC,EAAI,EACFC,EAAS/B,EAAQwB,OAAOO,OACxBC,EAAQhC,EAAQwB,OAAOQ,MACvBC,EAAeJ,EAAKK,OACpBC,EAAaH,EAAQC,EAE3BjC,EAAQoC,UAAY,UACpBpC,EAAQqC,SAAS,EAAG,EAAGL,EAAO,KAE9BhC,EAAQsC,UAAY,EACpBtC,EAAQuC,YAAc,UACtBvC,EAAQwC,YACRxC,EAAQyC,OAAOX,EAAGC,EAAWF,EAAK,GAAK,IAASE,EAAU,GAC1D,IAAK,IAAIW,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMC,EAAMd,EAAKa,GAAK,IAASX,EAAU,EACzC/B,EAAQ4C,OAAOd,EAAGC,EAASY,GAC3Bb,GAAKK,EAEPnC,EAAQ6C,SAkCJC,CAAmB9C,EAASkB,EAAUO,SAC7BT,IAASW,EAASoB,WAhCjC,SAA2B/C,EAAmC6B,GAC5D,IAAIC,EAAI,EACFC,EAAS/B,EAAQwB,OAAOO,OACxBC,EAAQhC,EAAQwB,OAAOQ,MACvBC,EAAeJ,EAAKK,OACpBc,EAAWhB,EAAQC,EAEzBjC,EAAQoC,UAAY,UACpBpC,EAAQqC,SAAS,EAAG,EAAGL,EAAO,KAE9BhC,EAAQoC,UAAY,UACpB,IAAK,IAAIM,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMO,EAAYlB,GAAUF,EAAKa,GAAK,KAChCC,EAAIZ,EAASkB,EACnBjD,EAAQqC,SAASP,EAAGa,EAAGK,EAAUC,GACjCnB,GAAKkB,GAkBHE,CAAkBlD,EAASkB,EAAUO,YAEtC,CAACT,IAEEmC,EAAU9C,uBAAY,WAC1B,IAAM4B,EAAenB,EAAKO,kBACpB+B,EAAY,IAAIhC,WAAWa,GAC7BjB,IAASW,EAASC,WACpBd,EAAKuC,sBAAsBD,GAClBpC,IAASW,EAASoB,WAC3BjC,EAAKwC,qBAAqBF,GAE5BlC,EAAUO,QAAU2B,IACnB,CAACtC,EAAME,IAWV,OCrFa,SAA2BuC,EAAgCC,GACxE,IAAMC,EAAkBtC,mBAClBuC,EAAavC,mBACbwC,EAAM,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAASG,OAElBC,EAAUvD,uBACd,SAACwD,GACC,GAA+B,MAA3BJ,EAAgBhC,QAAiB,CACnC,IAAMqC,EAAYD,EAAOJ,EAAgBhC,UACpCkC,GAAUG,EAAY,IAAOH,KAChCJ,EAASO,GACTL,EAAgBhC,QAAUoC,QAG5BN,EAAS,GACTE,EAAgBhC,QAAUoC,EAG5BH,EAAWjC,QAAUsC,sBAAsBH,KAG7C,CAACL,IAGHS,qBAAU,WAGR,OAFAN,EAAWjC,QAAUsC,sBAAsBH,GAEpC,WACqB,MAAtBF,EAAWjC,SACbwC,qBAAqBP,EAAWjC,YAGnC,CAACmC,IDmDJM,CAPa7D,uBAAY,WAClBU,IACHoC,IACA5B,OAED,CAACA,EAAM4B,EAASpC,KAIZ,oCAAQoD,IAAK7C,EAAW8C,MAAO,CAAEC,QAAS,UAAepD,IAGnDqD,UAAMC,KAAK1D,GElF1B,SAAS2D,EAAT,GAAsE,IAAtDzE,EAAqD,EAArDA,SAAU0E,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAO5D,EAAe,EAAfA,KACpD,OACE,sBAAK6D,UAAU,aAAaD,MAAOH,EAAnC,UACE,qBAAKI,UAAU,oBAAf,gBAAoCD,QAApC,IAAoCA,IAAS5D,IAC7C,sBAAK6D,UAAU,kBAAf,UACGH,GACC,qBAAKG,UAAU,oBAAf,SACGH,EAAOI,KAAI,SAAAC,GAAK,OACf,sBAAiBF,UAAU,kBAA3B,UACE,cAAC,IAAD,CAAQJ,GAAIM,EAAOC,SAAUC,IAASC,KAAMlE,KAAK,WAChD+D,IAFOA,QAOfJ,GACC,qBAAKE,UAAU,qBAAf,SACGF,EAAQG,KAAI,SAAAK,GAAM,OACjB,sBAAkBN,UAAU,kBAA5B,UACE,cAAC,IAAD,CAAQJ,GAAIU,EAAQH,SAAUC,IAASG,MAAOpE,KAAK,WAClDmE,IAFOA,WAQjBpF,KAKQuE,ICpCH3C,EDoCG2C,MAAMC,KAAKC,GC/B1B,SAASa,EAAT,GAAsE,IAAlDxD,EAAiD,EAAjDA,KAAM4C,EAA2C,EAA3CA,GAAIa,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BvE,KAA6B,EACea,EAA1E2D,kBAD2D,MAC9C,GAD8C,EAC1CC,EAAyD5D,EAAzD4D,SAD0C,EACe5D,EAA/Cd,cADgC,WACec,EAA/Bb,YADgB,MACTW,EAASC,WADA,EAI7D5B,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAsB,kBAAMD,EAAQ0F,mBAAkB,CAAC1F,IAC5D2F,EAAYhF,IAAZgF,QAMR,OALA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK8E,QAAUC,KAAKC,IAAI,EAAGN,KAAc,CAAC1E,EAAM0E,IAGpE,eAAC,EAAD,CAAMf,GAAIA,EAAIC,OAAQ,CAAC,QAAS,WAAYC,QAAS,CAAC,UAAWC,MAAK,oBAAe5D,GAAQA,KAAMuE,EAAnG,UACE,qBAAKV,UAAU,kBAAf,SACE,cAAC,EAAD,CAAY7D,KAAMA,EAAMF,KAAMA,EAAMC,OAAQA,EAAQgB,OAAQ,GAAIC,MAAO,QAExEsD,GACC,sBAAKT,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,KACJC,IAAI,IACJP,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAED,YAAaS,EAAEC,OAAOzF,SAChD0F,KAAM,EACN1F,MAAO+E,IAERK,KAAKC,IAAI,EAAGN,MAEf,sBAAKX,UAAU,kBAAkBT,MAAO,CAAEgC,eAAgB,iBAA1D,UACE,yBAAQX,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEzE,KAAMiF,EAAEC,OAAOzF,SAAUA,MAAOO,EAAlE,UACE,wBAAQP,MAAOkB,EAASoB,UAAxB,SAAoCpB,EAASoB,YAC7C,wBAAQtC,MAAOkB,EAASC,WAAxB,SAAqCD,EAASC,gBAEhD,wBACEwC,MAAO,CACLiC,WAAY,SACZhC,QAAS,QAHb,UAME,uBACEQ,UAAU,SACV7D,KAAK,WACLsF,QAASvF,EACT0E,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAE1E,QAASA,OAVvC,sB,SAzCAY,K,sBAAAA,E,0BAAAA,M,KA8DG2C,UAAMC,KAAKc,GC/D1B,SAASkB,EAAT,GAA0E,IAAlD1E,EAAiD,EAAjDA,KAAM4C,EAA2C,EAA3CA,GAAIa,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BvE,KAA6B,EACca,EAA7E2E,cAD+D,MACtD,EADsD,IACc3E,EAAjE4E,YADmD,MAC5C,EAD4C,IACc5E,EAAvD6E,iBADyC,MAC7B,IAD6B,IACc7E,EAAtC8E,SADwB,MACpB,EADoB,EACjBlB,EAA+B5D,EAA/B4D,SADiB,EACc5D,EAArBb,YADO,MACA,UADA,EAIjEhB,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAA0B,kBAAMD,EAAQ4G,uBAAsB,CAAC5G,IACpE2F,EAAYhF,IAAZgF,QAUR,OATA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK0F,OAAO/F,MAAQ+F,IAAS,CAAC1F,EAAM0F,IAC1DxC,qBAAU,WAAYlD,EAAK4F,UAAUjG,MAAQiG,IAAY,CAAC5F,EAAM4F,IAChE1C,qBAAU,WAAYlD,EAAK2F,KAAKhG,MAAQgG,IAAO,CAAC3F,EAAM2F,IACtDzC,qBAAU,WAAYlD,EAAK6F,EAAElG,MAAQkG,IAAI,CAAC7F,EAAM6F,IAChD3C,qBAAU,WAAYlD,EAAKE,KAAOA,IAAO,CAACF,EAAME,IAG9C,cAAC,EAAD,CACEyD,GAAIA,EACJC,OAAQ,CAAC,QAAS,SAAU,YAAa,OAAQ,KACjDC,QAAS,CAAC,UACVC,MAAK,kBAAa5D,GAClBA,KAAMuE,EALR,SAOGD,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,KAAM,IACND,IAAK,IACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEe,QAASP,EAAEC,OAAOzF,SAC5C0F,KAAM,EACNnF,KAAK,QACLP,MAAO+F,MAGX,qBAAK3B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,IAAK,EACLD,IAAK,MACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEiB,WAAYT,EAAEC,OAAOzF,SAC/CO,KAAK,SACLP,MAAOiG,MAGX,qBAAK7B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,KAAM,GACND,IAAK,GACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEgB,MAAOR,EAAEC,OAAOzF,SAC1C0F,KAAM,GACNnF,KAAK,QACLP,MAAOgG,MAGX,qBAAK5B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,IAAK,KACLD,IAAK,IACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEkB,GAAIV,EAAEC,OAAOzF,SACvCO,KAAK,SACLP,MAAOkG,MAGX,qBAAK9B,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEzE,KAAMiF,EAAEC,OAAOzF,SAAUA,MAAOO,EAAlE,UACE,wBAAQP,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,+BASC6D,UAAMC,KAAKgC,GCtF1B,SAASM,EAAT,GAAkE,IAAxChF,EAAuC,EAAvCA,KAAM4C,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,SAAUtE,EAAmB,EAAnBA,KAAmB,EAC9Ba,EAAzBiF,cADuD,MAC9C,EAD8C,EAC3CrB,EAAa5D,EAAb4D,SAGdzF,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAA4B,kBAAMD,EAAQ+G,yBAAwB,CAAC/G,IAChFgE,qBAAU,WAER,OADAlD,EAAKkG,QACE,kBAAMlG,EAAKmG,UACjB,CAACnG,IAT2D,IAUvD6E,EAAYhF,IAAZgF,QAMR,OALA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,kBAAOlD,EAAKgG,OAAOrG,MAAQqG,IAAS,CAAChG,EAAMgG,IAGnD,cAAC,EAAD,CAAMrC,GAAIA,EAAIE,QAAS,CAAC,UAAWC,MAAK,oBAAekC,GAAU9F,KAAMA,EAAvE,SACGsE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,SACLyE,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEqB,QAASb,EAAEC,OAAOzF,SAC5C2D,MAAO,CAAEpC,MAAO,QAChBvB,MAAOqG,UASNxC,UAAMC,KAAKsC,GCnC1B,SAASK,EAAT,GAAyD,IAAxCrF,EAAuC,EAAvCA,KAAM4C,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,SAAUtE,EAAmB,EAAnBA,KAAmB,EAClBa,EAA5BsF,iBAD8C,MAClC,EADkC,EAC/B1B,EAAa5D,EAAb4D,SAGjBzF,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAmB,kBAAMD,EAAQoH,gBAAe,CAACpH,IACtD2F,EAAYhF,IAAZgF,QAMR,OALA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAKqG,UAAU1G,MAAQ0G,IAAY,CAACrG,EAAMqG,IAG9D,cAAC,EAAD,CAAM1C,GAAIA,EAAIC,OAAQ,CAAC,QAAS,aAAcC,QAAS,CAAC,UAAWC,MAAK,iBAAYuC,EAAZ,MAA2BnG,KAAMA,EAAzG,SACGsE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,SACLyE,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAE0B,WAAYlB,EAAEC,OAAOzF,SAC/CA,MAAO0G,UASN7C,UAAMC,KAAK2C,GC9B1B,SAASG,EAAT,GAA+C,IAAxB5C,EAAuB,EAAvBA,GAAIzD,EAAmB,EAAnBA,KAGnBF,EADUF,qBAAWhB,GACN0H,YACb3B,EAAYhF,IAAZgF,QAGR,OAFA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAEjD,cAAC,EAAD,CAAMA,GAAIA,EAAIC,OAAQ,CAAC,SAAU1D,KAAMA,IAGjCsD,UAAMC,KAAK8C,GCV1B,SAASE,EAAT,GAAsE,IAAxC1F,EAAuC,EAAvCA,KAAM4C,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,SAAUtE,EAAmB,EAAnBA,KAAmB,EAC0Ba,EAArF2F,cAD2D,MAClD,KADkD,IAC0B3F,EAArE4F,YAD2C,MACpC,GADoC,EAChChC,EAA0D5D,EAA1D4D,SADgC,EAC0B5D,EAAhD6F,aADsB,MACd,GADc,IAC0B7F,EAApC8F,eADU,MACA,IADA,IAC0B9F,EAApB+F,iBADN,OACmB,GADnB,EAI7D5H,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAgC,kBAAMD,EAAQ6H,6BAA4B,CAAC7H,IAChF2F,EAAYhF,IAAZgF,QAUR,OATA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK8G,UAAUnH,MAAQmH,IAAY,CAAC9G,EAAM8G,IAChE5D,qBAAU,WAAYlD,EAAK2G,KAAKhH,MAAQgH,IAAO,CAAC3G,EAAM2G,IACtDzD,qBAAU,WAAYlD,EAAK4G,MAAMjH,MAAQiH,IAAQ,CAAC5G,EAAM4G,IACxD1D,qBAAU,WAAYlD,EAAK0G,OAAO/G,MAAQ+G,IAAS,CAAC1G,EAAM0G,IAC1DxD,qBAAU,WAAYlD,EAAK6G,QAAQlH,MAAQkH,IAAU,CAAC7G,EAAM6G,IAG1D,cAAC,EAAD,CACElD,GAAIA,EACJC,OAAQ,CAAC,QAAS,YAAa,OAAQ,QAAS,SAAU,WAC1DC,QAAS,CAAC,UACV3D,KAAMA,EAJR,SAMGsE,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,IACJC,IAAI,OACJG,KAAK,IACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEmC,WAAY3B,EAAEC,OAAOzF,SAC/CA,MAAOmH,MAGX,qBAAK/C,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,KACJC,IAAI,IACJG,KAAK,IACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEgC,MAAOxB,EAAEC,OAAOzF,SAC1CA,MAAOgH,MAGX,qBAAK5C,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,KACJC,IAAI,IACJG,KAAK,IACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEiC,OAAQzB,EAAEC,OAAOzF,SAC3CA,MAAOiH,MAGX,qBAAK7C,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,IACJC,IAAI,IACJG,KAAK,QACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAE+B,QAASvB,EAAEC,OAAOzF,SAC5CA,MAAO+G,MAGX,qBAAK3C,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,IACJC,IAAI,IACJG,KAAK,QACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEkC,SAAU1B,EAAEC,OAAOzF,SAC7CA,MAAOkH,WASNrD,UAAMC,KAAKgD,GCtF1B,SAASO,EAAT,GAAwD,IAAxCjG,EAAuC,EAAvCA,KAAM4C,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,SAAUtE,EAAmB,EAAnBA,KAAmB,EACtBa,EAAvB4E,YAD6C,MACtC,EADsC,EACnChB,EAAa5D,EAAb4D,SAGZzF,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAkB,kBAAMD,EAAQ+H,eAAc,CAAC/H,IACpD2F,EAAYhF,IAAZgF,QAMR,OALA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK2F,KAAKhG,MAAQgG,IAAO,CAAC3F,EAAM2F,IAGpD,cAAC,EAAD,CAAMhC,GAAIA,EAAIC,OAAQ,CAAC,QAAS,QAASC,QAAS,CAAC,UAAWC,MAAK,gBAAW6B,GAAQzF,KAAMA,EAA5F,SACGsE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,IACJC,IAAI,KACJG,KAAK,OACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEgB,MAAOR,EAAEC,OAAOzF,SAC1CA,MAAOgG,UASNnC,UAAMC,KAAKuD,GCjC1B,SAASE,EAAT,GAAwE,IAAlDnG,EAAiD,EAAjDA,KAAM4C,EAA2C,EAA3CA,GAAIa,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BvE,KAA6B,EACJa,EAAzD2E,cAD6D,MACpD,EADoD,IACJ3E,EAA7C6E,iBADiD,MACrC,IADqC,EAChCjB,EAA4B5D,EAA5B4D,SADgC,EACJ5D,EAAlBb,YADsB,MACf,OADe,EAI/DhB,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAwB,kBAAMD,EAAQiI,qBAAoB,CAACjI,IACxEgE,qBAAU,WAER,OADAlD,EAAKkG,QACE,kBAAMlG,EAAKmG,UACjB,CAACnG,IATiE,IAU7D6E,EAAYhF,IAAZgF,QAQR,OAPA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK0F,OAAO/F,MAAZ,OAAoB+F,QAApB,IAAoBA,IAAU,IAAI,CAAC1F,EAAM0F,IAC/DxC,qBAAU,WAAYlD,EAAK4F,UAAUjG,MAAf,OAAuBiG,QAAvB,IAAuBA,IAAa,MAAM,CAAC5F,EAAM4F,IACvE1C,qBAAU,WAAYlD,EAAKE,KAAL,OAAYA,QAAZ,IAAYA,IAAQ,SAAS,CAACF,EAAME,IAGxD,cAAC,EAAD,CACEyD,GAAIA,EACJC,OAAQ,CAAC,SAAU,aACnBC,QAAS,CAAC,UACVC,MAAK,UAAK8B,EAAL,eAAqB1F,GAC1BA,KAAMuE,EALR,SAOGD,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,KAAM,IACND,IAAK,IACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEe,QAASP,EAAEC,OAAOzF,SAC5C0F,KAAM,EACNnF,KAAK,SACLP,MAAO+F,MAGX,qBAAK3B,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,IAAK,EACLD,IAAK,IACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEiB,WAAYT,EAAEC,OAAOzF,SAC/CO,KAAK,SACLP,MAAOiG,MAGX,qBAAK7B,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEzE,KAAMiF,EAAEC,OAAOzF,SAAUA,MAAOO,EAAlE,UACE,wBAAQP,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCASC6D,UAAMC,KAAKyD,GCrEpBE,EAAQ,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,KAQpE,SAASC,EAAmBC,GACjC,GAAIA,EAAU,GAAKA,EAAU,GAC3B,MAAM,IAAIC,WAAJ,8CAAsDD,IAIzD,SAASE,EAAiBC,EAAgBH,IAZ1C,SAA2BG,GAChC,GAAIA,EAAS,GAAKA,EAAS,GACzB,MAAM,IAAIF,WAAJ,8CAAsDE,IAW9DC,CAAkBD,GAClBJ,EAAmBC,GAGnB,OADW,QACCvC,KAAKC,IAAI,EAAGyC,EAASH,EAAU,IAGtC,SAASK,EAAYL,GAG1B,OAFAD,EAAmBC,GAEZF,EAAME,GCjBf,IAAMM,EAAsC,CAC1CrE,QAAS,eACTsE,UAAW,SACX3G,MAAO,GAEH4G,EAAiC,2BAClCF,GADkC,IAErCG,cAAe,QAEXC,EAAgC,2BACjCJ,GADiC,IAEpCK,UAAW,oBACXF,cAAe,UAGjB,SAASG,EAAT,GAA2C,IAA3BT,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,QAAkB,EAClBK,EAAYL,GAASa,MAAM,IADT,mBACjCC,EADiC,KAC3BC,EAD2B,KAElCzC,EAAY4B,EAAiBC,EAAQH,GAE3C,OACE,iCACGc,EACD,uBAAO9E,MAAOwE,EAAd,SAA6BL,IAC5BY,GAAS,uBAAO/E,MAAO0E,EAAd,SAA4BK,IACtC,uCAAUzC,EAAU0C,QAAQ,GAA5B,aAKS9E,UAAMC,KAAKyE,GC7B1B,SAASK,EAAT,GAA4E,IAAlDxH,EAAiD,EAAjDA,KAAM4C,EAA2C,EAA3CA,GAAIa,EAAuC,EAAvCA,SAAgBC,EAAuB,EAA7BvE,KAA6B,EACAa,EAAjE2E,cADiE,MACxD,EADwD,IACA3E,EAArD0G,cADqD,MAC5C,EAD4C,EACzC9C,EAAyC5D,EAAzC4D,SADyC,EACA5D,EAA/BuG,eAD+B,MACrB,EADqB,IACAvG,EAAlBb,YADkB,MACX,OADW,EAEnE0F,EAAY4B,EAAiBC,EAAQH,GAGrCpI,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAwB,kBAAMD,EAAQiI,qBAAoB,CAACjI,IACxEgE,qBAAU,WAER,OADAlD,EAAKkG,QACE,kBAAMlG,EAAKmG,UACjB,CAACnG,IAVqE,IAWjE6E,EAAYhF,IAAZgF,QAQR,OAPA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK0F,OAAO/F,MAAZ,OAAoB+F,QAApB,IAAoBA,IAAU,IAAI,CAAC1F,EAAM0F,IAC/DxC,qBAAU,WAAYlD,EAAK4F,UAAUjG,MAAQiG,IAAY,CAAC5F,EAAM4F,IAChE1C,qBAAU,WAAYlD,EAAKE,KAAL,OAAYA,QAAZ,IAAYA,IAAQ,SAAS,CAACF,EAAME,IAGxD,cAAC,EAAD,CACEyD,GAAIA,EACJC,OAAQ,CAAC,UACTC,QAAS,CAAC,UACVC,MAAO,cAAC,EAAD,CAAM2D,OAAQA,EAAQH,QAASA,IACtCpH,KAAMuE,EALR,SAOGD,GACC,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACVmB,KAAM,IACND,IAAK,IACLN,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEe,QAASP,EAAEC,OAAOzF,SAC5C0F,KAAM,EACN/B,MAAO,CAAEpC,MAAO,QAChBhB,KAAK,QACLP,MAAO+F,MAGX,sBAAK3B,UAAU,kBAAf,UACE,wBAAQY,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAE2C,SAAUnC,EAAEC,OAAOzF,SAAU2D,MAAO,CAAEpC,MAAO,OAASvB,MAAO2H,EAA/F,SACGkB,MAAM,IACJC,KAAK,GACLzE,KAAI,SAAC0E,EAAGpB,GAAJ,OACH,wBAAQ3H,MAAO2H,EAAf,SAAyBK,EAAYL,UAG3C,wBAAQ3C,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAE8C,QAAStC,EAAEC,OAAOzF,SAAU2D,MAAO,CAAEpC,MAAO,OAASvB,MAAO8H,EAA9F,SACGe,MAAM,IACJC,KAAK,GACLzE,KAAI,SAAC0E,EAAGjB,GAAJ,OACH,wBAAQ9H,MAAO8H,EAAf,SAAwBA,YAIhC,qBAAK1D,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEzE,KAAMiF,EAAEC,OAAOzF,SAAU2D,MAAO,CAAEpC,MAAO,QAAUvB,MAAOO,EAA5F,UACE,wBAAQP,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCChEd,SAASgJ,GAAT,GAAgE,IAAxC5H,EAAuC,EAAvCA,KAAM4C,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,SAAUtE,EAAmB,EAAnBA,KAAmB,EAC/Ba,EAAtB6H,WADqD,MAC/C,EAD+C,EAC5CjE,EAAa5D,EAAb4D,SAGXzF,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAA0B,kBAAMD,EAAQ2J,uBAAsB,CAAC3J,IACpE2F,EAAYhF,IAAZgF,QAMR,OALA3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAGxDT,qBAAU,WAAYlD,EAAK4I,IAAIjJ,MAAQiJ,IAAM,CAAC5I,EAAM4I,IAGlD,cAAC,EAAD,CACEjF,GAAIA,EACJC,OAAQ,CAAC,QAAS,OAClBC,QAAS,CAAC,UACVC,MAAK,kBAAaiB,KAAK+D,IAAU,IAANF,GAAWN,QAAQ,GAAzC,aAAgDM,EAAM,EAAI,QAAUA,EAAM,EAAI,OAAS,IAC5F1I,KAAMA,EALR,SAOGsE,GACC,qBAAKT,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,SACV7D,KAAK,QACL+E,IAAI,IACJC,IAAI,KACJG,KAAK,OACLV,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEiE,KAAMzD,EAAEC,OAAOzF,SACzCA,MAAOiJ,UCpBrB,SAASG,GAAT,GAA8D,IAAD,EAAvChI,EAAuC,EAAvCA,KAAM4C,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,SAAUtE,EAAmB,EAAnBA,KAChCyE,EAAyB5D,EAAzB4D,SAAUqE,EAAejI,EAAfiI,WADyC,EAE7BC,mBAAQ,UAAClI,EAAKmI,eAAN,QAXxB,6OAS6C,mBAEpDA,EAFoD,KAE3CC,EAF2C,OAGXF,mBAASC,GAHE,mBAGpDE,EAHoD,KAGlCC,EAHkC,KAMrDnK,EAAUY,qBAAWhB,GACrBkB,EAAOb,mBAAwB,kBAAMD,EAAQoK,qBAAoB,CAACpK,IAChE2F,EAAYhF,IAAZgF,QACR3B,qBAAU,WAAW2B,EAAQlB,EAAI3D,KAAO,CAAC6E,EAAS7E,EAAM2D,IAExD,IAAM4F,EAAQpK,mBAAQ,WACpB,IAAMoK,EAAQ,IAAIC,aAAatK,EAAQuK,YAEvC,OAAO,IAAIC,SAAS,QAASN,EAAtB,CAAwCG,KAC9C,CAACrK,EAAQuK,WAAYL,IAGxBlG,qBAAU,WAAYlD,EAAKuJ,MAAQA,IAAQ,CAACvJ,EAAMuJ,IAClDrG,qBAAU,WAAYlD,EAAKgJ,WAAaA,IAAa,CAAChJ,EAAMgJ,IAE5D,IAAMW,EAAcpK,uBAAY,WAC9B,IAEE,IAAImK,SAAS,QAASR,EAAtB,CAA+B,IAAIM,aAAatK,EAAQuK,aAExDJ,EAAoBH,GACpBvE,EAAS,CAAEuE,YACX,MAAO/D,GACPyE,QAAQC,MAAM1E,MAEf,CAACjG,EAAQuK,WAAYP,EAASvE,IAEjC,OACE,cAAC,EAAD,CAAMhB,GAAIA,EAAIC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAW3D,KAAMA,EAA5D,SACGsE,GACC,sBAAKT,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAkBT,MAAO,CAAEwG,SAAU,QAApD,UACE,0BACE/F,UAAU,SACVY,SAAU,SAAAQ,GAAC,OAAIgE,EAAWhE,EAAEC,OAAOzF,QACnCoK,KAAM,EACNzG,MAAO,CAAEpC,MAAO,QAChBvB,MAAOuJ,IAET,wBAAQzJ,QAASkK,EAAjB,qBAEF,qBAAK5F,UAAU,kBAAf,SACE,yBAAQY,SAAU,SAAAQ,GAAC,OAAIR,EAAS,CAAEqE,WAAY7D,EAAEC,OAAOzF,SAAUA,MAAOqJ,EAAxE,UACE,wBAAQrJ,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,0BChCd,IAAMqK,GAAY,CAChBzF,SAAUA,EACVkB,aAAcA,EACdM,eAAgBA,EAChBK,MAAOA,EACPG,YAAaA,EACbE,mBAAoBA,EACpBO,KAAMA,EACNE,WAAYA,EACZqB,eHmCa/E,IAAMC,KAAK8E,GGlCxBI,aFAanF,IAAMC,KAAKkF,IECxBI,WD8BavF,IAAMC,KAAKsF,K,SC3BXkB,G,mFAAf,WAAmCC,EAA2BC,GAA9D,eAAAC,EAAA,sDACQC,EAAuBH,EAAgBI,OAAOC,KAAQC,QAAgC,SAACC,EAASC,GAGpG,OAFAD,EAAQC,EAAKC,SAAU,EACvBF,EAAQC,EAAKtF,SAAU,EAChBqF,IACN,IALL,WAMSG,OAAOC,KAAKR,GAAsBjJ,OAN3C,uBAOIwJ,OAAOC,KAAKV,GAAYW,SAAQ,SAAAC,UACvBV,EAAqBU,MARlC,SAUU,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,MAVrD,kE,sBAeA,SAASE,GAAT,GAAqD,IAA3BjB,EAA0B,EAApCkB,SAAoC,EACd5H,IAAMyF,UAAS,GADD,mBAC3CoC,EAD2C,KAC/BC,EAD+B,OAER9H,IAAMyF,WAFE,mBAE3CsC,EAF2C,KAE5BC,EAF4B,OAGFhI,IAAMyF,SAAc,MAHlB,mBAG3CwC,EAH2C,KAGzBC,EAHyB,OAInBC,YAAUF,EAAkBF,EAAe,CACxEK,UAAW,iBADLC,EAJ0C,EAI1CA,OAAQC,EAJkC,EAIlCA,WAGV7D,EAAY8D,aAAc,SAAAC,GAAK,OAAIA,EAAM/D,aAPG,EASlBgB,mBAAmBiB,GATD,mBAS3CkB,EAT2C,KASjCa,EATiC,KAUnC9B,EAAetK,IAAtBqM,MAEFC,ECvED,WAAyB,IACtBD,EAAUrM,IAAVqM,MAER,OAAO3M,uBACL,SAAC6M,GAGC,GAFAxC,QAAQyC,IAAI,qBAAsBD,GAE7BA,EAAWzB,QAAWyB,EAAWhH,QAAWgH,EAAWE,aAA5D,CAIA,IAAM3B,EAASuB,EAAME,EAAWzB,QAC1BvF,EAAS8G,EAAME,EAAWhH,QAC1BkH,EAAeF,EAAWE,aAGX,UAAjBA,EACF3B,EAAO4B,QAAQnH,GAKfuF,EAAO4B,QAAQnH,EAAOkH,OAG1B,CAACJ,ID8CuBM,GACpBC,EC1CD,WAA4B,IACzBP,EAAUrM,IAAVqM,MAER,OAAO3M,uBACL,SAACmL,GAGC,GAFAd,QAAQyC,IAAI,qBAAsB3B,GAE7BA,EAAKC,QAAWD,EAAKtF,QAAWsF,EAAK4B,aAA1C,CAIA,IAAM3B,EAASuB,EAAMxB,EAAKC,QACpBvF,EAAS8G,EAAMxB,EAAKtF,QACpBkH,EAAe5B,EAAK4B,aAGL,UAAjBA,EACF3B,EAAO+B,WAAWtH,GAKlBuF,EAAO+B,WAAWtH,EAAOkH,OAG7B,CAACJ,IDiBkBS,GACfC,ECbD,WAA4B,IACzBV,EAAUrM,IAAVqM,MAER,OAAO3M,uBACL,SAACwL,GACCnB,QAAQyC,IAAI,eAAgBtB,EAAQmB,GAEpC,IAAMlM,EAAOkM,EAAMnB,GAEd/K,GAILA,EAAK0M,eAEP,CAACR,IDFkBW,GAEfC,EAAiB,SAACnJ,GAAD,OAAgB,SAAC5C,GACtCkL,EACEc,aAAQ,SAACC,GACP,IAAMhN,EAAOgN,EAAM1C,OAAO2C,KAAQC,MAAK,SAAAC,GAAO,OAAIA,EAAQxJ,KAAOA,KAC5D3D,GAGL4K,OAAOC,KAAK9J,GAAM+J,SAAQ,SAAAsC,GAAQ,OAAKpN,EAAKe,KAAKqM,GAAYrM,EAAKqM,YAKlEC,EAAM,uCAAG,sBAAAjD,EAAA,6DAEb6B,EACEc,aAAQ,SAACC,GACPA,EAAM1C,OAAO2C,KAAQnC,SAAQ,SAAA9K,GAC3BA,EAAKe,KAAK4D,SAAWmI,EAAe9M,EAAK2D,WALlC,SAYPsG,GAAoBC,EAAiBC,GAZ9B,OAaCD,EAAgBI,OAAOC,KAC/BO,SAAQ,SAAAJ,GAAI,OAAIyB,EAAkBzB,MAd3B,2CAAH,qDAqBN4C,EAAmB/N,uBACvB,SAACgO,GACCA,EAAiBjD,OAAOC,KAAQO,SAAQ,SAAAJ,GAAI,OAAI+B,EAAa/B,MAC7D6C,EAAiBjD,OAAO2C,KAAQnC,SAAQ,SAAA9K,GAAI,OAAI4M,EAAa5M,EAAK2D,OAElEsI,GAAY,SAAAb,GAAQ,OAAIoC,YAAeD,EAAkBnC,QAE3D,CAACqB,EAAcG,IAsCX/H,EAAUtF,uBACd,SAACW,GACC,IAAMyD,EAAE,UAAMzD,EAAN,YAAcuN,eAMhBzN,EAAO,CACX2D,KACA5C,KAAM,CAAE4D,SAPOmI,EAAenJ,IAQ9BzD,OACAgE,SARe,CACflD,GAAIyK,EAAiBiC,wBAAwBC,KAAO1F,EAAU,IAAMA,EAAU,GAC9EpG,GAAI4J,EAAiBiC,wBAAwBE,IAAM3F,EAAU,IAAMA,EAAU,KAQ/EgE,GAAY,SAAAb,GAAQ,4BAAQA,GAAR,CAAkBpL,OACtCsL,GAAc,KAEhB,CAACrD,EAAWwD,IAGd,OACE,qCACE,eAAC,IAAD,CACEL,SAAUA,EACVpB,UAAWA,GACX6D,UA1EY,SAACC,GACjB7B,GAAY,SAAAb,GAAQ,OAAI2C,YAAQD,EAAQ1C,MACxCe,EAAkB2B,IAyEdE,aA9De,SAACC,EAAeC,GACnCzB,EAAawB,GACbhC,GAAY,SAAAb,GAAQ,OAAIoC,YAAe,CAACS,GAAU7C,MAClDa,GAAY,SAAAb,GAAQ,OAAI2C,YAAQG,EAAe9C,MAC/Ce,EAAkB+B,IA2DdZ,iBAAkBA,EAClBD,OAAQA,EACRc,eA1DiB,SAACC,EAA8CC,GACpEpC,EACEc,aAAQ,SAACC,GACP,IAAMhN,EAAOgN,EAAM1C,OAAO2C,KAAQC,MAAK,SAAAC,GAAO,OAAIA,EAAQxJ,KAAO0K,EAAY1K,MACxE3D,IAGLA,EAAKkE,SAAWmK,EAAYnK,eAoD5BoK,YA/Cc,SAACF,GACnB9C,KAAe,OAACC,QAAD,IAACA,OAAD,EAACA,EAAegD,SAASH,EAAMhJ,WA+C1CoJ,kBA5CoB,SAACJ,GACzBA,EAAMK,iBACNnD,GAAc,GACdI,EAAoB,CAClBgC,sBAAuB,iBAAO,CAC5BE,IAAsC,GAAjC7I,KAAK2J,MAAMN,EAAMO,QAAU,IAChChB,KAAuC,GAAjC5I,KAAK2J,MAAMN,EAAMQ,QAAU,IACjC3N,OAAQ,EACRC,MAAO,OAqCP2N,2BAA2B,EAC3BC,YAAU,EACVC,SAAU,CAAC,GAAI,IAEfzL,MAAO,CAAE0L,OAAQ,GAdnB,UAgBE,cAAC,IAAD,CAAYC,IAAK,KACjB,cAAC,IAAD,OAGD5D,GACC,6CAAKhI,IAAK,SAAArD,GAAI,OAAIA,GAAQwL,EAAiBxL,IAAOsD,MAAOuI,EAAOqD,QAAYpD,EAAWoD,QAAvF,aACE,qBAAInL,UAAU,cAAd,UACE,oBAAItE,QAAS,kBAAMoF,EAAQ,aAA3B,0BACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,iBAA3B,+BACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,mBAA3B,iCACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,UAA3B,uBACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,gBAA3B,6BACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,uBAA3B,qCACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,SAA3B,sBACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,eAA3B,4BACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,mBAA3B,iCACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,iBAA3B,+BACA,oBAAIpF,QAAS,kBAAMoF,EAAQ,eAA3B,sCAQGrB,WAAMC,KAAK0H,IEnJXgE,OA7Df,YAAyC,IAAtBC,EAAqB,EAArBA,WAEXC,EADWtD,aAAc,SAAAC,GAAK,OAAIA,EAAMZ,YACdpH,KAAI,SAAAmJ,GAAO,kCACtCA,GADsC,IAEzCmC,UAAMC,OAEFC,EAAUC,KAAKC,UAAUL,GAG/BnM,qBAAU,WACR,IAAMsM,EAAUG,KAAKvQ,OAAOwQ,SAASC,KAAKC,OAAO,IACjD,IACE,IAAM1E,EAAWqE,KAAKM,MAAMP,GAC5BJ,EAAW,CACTzL,GAAI8J,cACJrC,aAEF,aACD,CAACgE,IAGJlM,qBAAU,WACR9D,OAAOwQ,SAASC,KAAOG,KAAKR,KAC3B,CAACA,IAEJ,IAAM7K,EAAWpF,uBACf,SAAC4F,GACC,IACE,IAAMiG,EAAWqE,KAAKM,MAAM5K,EAAEC,OAAOzF,OACrCyP,EAAW,CACThE,WACAzH,GAAI8J,gBAEN,MAAOtI,GACPyE,QAAQC,MAAM1E,MAGlB,CAACiK,IAGH,OACE,qBACE9L,MAAO,CACL2M,QAAS,GACT/O,MAAO,KAHX,SAME,0BACEyD,SAAUA,EACVrB,MAAO,CACL4M,SAAU,GACVjP,OAAQ,OACRkP,OAAQ,OACRjP,MAAO,QAETvB,MAAO8P,KAAKC,UAAUL,EAAgB,KAAM,QC1CrCe,OAnBf,YAAqC,IAApBnR,EAAmB,EAAnBA,SACTiN,EAAQ7L,iBAAiC,IACzCnB,EAA2BC,mBAC/B,iBAAO,CACL0F,QAAS,SAAClB,EAAI3D,GACZkM,EAAMvL,QAAQgD,GAAM3D,GAEtBkM,MAAOA,EAAMvL,WAEf,IAGF,OACE,8BACE,cAACf,EAAYF,SAAb,CAAsBC,MAAOT,EAA7B,SAAuCD,OCY9BoR,OA1Bf,WAAgB,IAAD,EACiBpH,mBAAuB,CACnDtF,GAAI,GACJyH,SAAU,KAHC,mBACNoE,EADM,KACGJ,EADH,KAMb,OACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,sBACE9L,MAAO,CACLiC,WAAY,UACZhC,QAAS,OACTtC,OAAQ,SAJZ,UAOE,cAAC,GAAD,CAAuBmK,SAAUoE,EAAQpE,UAA9BoE,EAAQ7L,IACnB,cAAC,GAAD,CAASyL,WAAYA,cCXlBkB,GAZS,SAACC,GACnBA,GAAeA,aAAuB7G,UACxC,6BAAqB8G,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.f31cf9af.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  nodes: Record<string, AudioNode>;\n};\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<Node extends AudioNode>(id: string): Node {\n  const context = useNodeContext();\n\n  return context.nodes[id] as Node;\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/nodes/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<AnalyserNode>(() => context.createAnalyser(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"11\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<BiquadFilterNode>(() => context.createBiquadFilter(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<ConstantSourceNode>(() => context.createConstantSource(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DelayNode>(() => context.createDelay(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useContext, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = context.destination;\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<DynamicsCompressorNode>(() => context.createDynamicsCompressor(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction Gain({ data, id, selected, type }: NodeProps) {\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<GainNode>(() => context.createGain(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst pitchStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [note, pitch] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {note}\n      <small style={octaveStyles}>{octave}</small>\n      {pitch && <small style={pitchStyles}>{pitch}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/nodes/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<OscillatorNode>(() => context.createOscillator(), [context]);\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option value={twelfth}>{getNoteName(twelfth)}</option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option value={octave}>{octave}</option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<StereoPannerNode>(() => context.createStereoPanner(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport Node from \"components/nodes/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useMemo<WaveShaperNode>(() => context.createWaveShaper(), [context]);\n  const { addNode } = useNodeContext();\n  useEffect(() => void addNode(id, node), [addNode, node, id]);\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Gain from \"components/nodes/Gain\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Gain: Gain,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nfunction Flow({ elements: initialElements }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const onLoad = async () => {\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    setElements(elements => addEdge(params, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = draggedNode.position;\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: Math.floor(event.clientY / 10) * 10,\n        left: Math.floor(event.clientX / 10) * 10,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: (virtualReference.getBoundingClientRect().left - transform[0]) / transform[2],\n        y: (virtualReference.getBoundingClientRect().top - transform[1]) / transform[2],\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[10, 10]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={10} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n            <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n            <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (connection: Edge | Connection) => {\n      console.log(\"Connection created\", connection);\n\n      if (!connection.source || !connection.target || !connection.targetHandle) {\n        return;\n      }\n\n      const source = nodes[connection.source];\n      const target = nodes[connection.target];\n      const targetHandle = connection.targetHandle;\n\n      // connect AudioNode\n      if (targetHandle === \"input\") {\n        source.connect(target);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.connect(target[targetHandle]);\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (edge: Edge) => {\n      console.log(\"Connection removed\", edge);\n\n      if (!edge.source || !edge.target || !edge.targetHandle) {\n        return;\n      }\n\n      const source = nodes[edge.source];\n      const target = nodes[edge.target];\n      const targetHandle = edge.targetHandle;\n\n      // connect AudioNode\n      if (targetHandle === \"input\") {\n        source.disconnect(target);\n      }\n      // connect AudioParam\n      else {\n        // @ts-ignore\n        source.disconnect(target[targetHandle]);\n      }\n    },\n    [nodes]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { nodes } = useNodeContext();\n\n  return useCallback(\n    (nodeId: string) => {\n      console.log(\"Node removed\", nodeId, nodes);\n\n      const node = nodes[nodeId];\n\n      if (!node) {\n        return;\n      }\n\n      node.disconnect();\n    },\n    [nodes]\n  );\n}\n","import { useStoreState, Elements } from \"react-flow-renderer\";\nimport React, { Dispatch, SetStateAction, useCallback, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n}\n\nfunction Project({ setProject }: Props) {\n  const elements = useStoreState(store => store.elements);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const project = JSON.stringify(mappedElements);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const elements = JSON.parse(project);\n      setProject({\n        id: uuidv4(),\n        elements,\n      });\n    } catch {}\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const elements = JSON.parse(e.target.value) as Elements;\n        setProject({\n          elements,\n          id: uuidv4(),\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  return (\n    <div\n      style={{\n        padding: 10,\n        width: 400,\n      }}\n    >\n      <textarea\n        onChange={onChange}\n        style={{\n          fontSize: 12,\n          height: \"100%\",\n          resize: \"none\",\n          width: \"100%\",\n        }}\n        value={JSON.stringify(mappedElements, null, 2)}\n      />\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      nodes: nodes.current,\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>({\n    id: \"\",\n    elements: [],\n  });\n\n  return (\n    <Audio>\n      <Nodes>\n        <ReactFlowProvider>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} />\n            <Project setProject={setProject} />\n          </div>\n        </ReactFlowProvider>\n      </Nodes>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}