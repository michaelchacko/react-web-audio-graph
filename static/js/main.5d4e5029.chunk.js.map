{"version":3,"sources":["worklets/envelope-processor.worklet.ts","worklets/gate-processor.worklet.ts","context/AudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","worklets/envelope-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/FlowContextMenu.tsx","components/controls/Slider.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/nodes/Keyboard.tsx","components/nodes/Metronome.tsx","components/nodes/Noise.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","window","webkitAudioContext","useEffect","awaitAudioWorkletProcessors","a","Promise","all","audioWorklet","addModule","EnvelopeWorkletProcessor","GateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","Mode","Parameters","Stage","memo","ADSR","selected","mode","Linear","sustainOn","envelope","AudioWorkletNode","processorOptions","attack","parameters","get","AttackTime","decay","DecayTime","gain","gate","release","ReleaseTime","sustain","SustainLevel","Exponential","Logarithmic","alignItems","display","checked","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","Analyser","nodeType","fftSizeExp","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","BiquadFilterType","BiquadFilter","detune","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","channel","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","DelayEffect","feedback","mix","createGain","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","Destination","destination","DynamicsCompressor","knee","ratio","threshold","createDynamicsCompressor","Envelope","attackTime","decayTime","releaseTime","sustainLevel","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","triggerOn","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","triggerOff","releaseTimeUsed","gateTrigger","message","port","onmessage","meta","sustainTime","scale","arc","drawEnvelope","FlowContextMenu","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","Gain","toFixed","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","A","B","toggleInput","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","keyBlack","keyWhite","Keyboard","setNote","noteFrequency","playNote","stopNote","onMouseLeave","onMouseEnter","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","buffer","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","floor","maxGain","gainAttack","sin","createBufferSource","loop","loopEnd","toggleNote","n","concat","Whole","Half","Eight","Sixteenth","color","generateWhiteNoise","bufferSize","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","generator","brown","pink","Oscillator","createOscillator","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","OutputSwitch","toggleOutput","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","nodeTypes","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","reduce","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","setTransform","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","produce","draft","isNode","onMoveEnd","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","defaultPosition","defaultZoom","onlyRenderVisibleElements","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d4e5029.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"a0235f5e912865b33aba.worklet.js\";","module.exports = __webpack_public_path__ + \"a0986bdee6ebf67ad863.worklet.js\";","import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\nimport EnvelopeWorkletProcessor from \"worklet-loader!worklets/envelope-processor.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      await Promise.all([\n        context.audioWorklet.addModule(EnvelopeWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode, Parameters } from \"worklets/envelope-processor.types\";\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.Linear, onChange, sustainOn = true } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      const envelope = new AudioWorkletNode(context, \"envelope-processor\", {\n        processorOptions: { sustainOn, mode },\n      });\n\n      return {\n        attack: envelope.parameters.get(Parameters.AttackTime),\n        decay: envelope.parameters.get(Parameters.DecayTime),\n        gain: envelope,\n        gate: envelope,\n        input: undefined,\n        output: undefined,\n        release: envelope.parameters.get(Parameters.ReleaseTime),\n        sustain: envelope.parameters.get(Parameters.SustainLevel),\n      };\n    },\n    [mode, sustainOn]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n              />\n              sustain on\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={inputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={outputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              onChange={e => onChange({ feedback: +e.target.value })}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface EnvelopeNode extends Required<ComplexAudioNode<GainNode, GainNode>> {\n  gate: AudioWorkletNode;\n}\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const { attackTime = 0.2, decayTime = 0.1, onChange, releaseTime = 0.6, sustainLevel = 0.7, sustainOn = true } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const gain = context.createGain();\n    const gate = new AudioWorkletNode(context, \"gate-processor\");\n\n    return {\n      gate,\n      input: gain,\n      output: gain,\n    };\n  }) as unknown) as EnvelopeNode;\n\n  // AudioParam\n  useEffect(() => void node.output.gain.setTargetAtTime(0, node.output.context.currentTime, 0.015), [node]);\n\n  const triggerOn = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOnEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(0, currentTime);\n    node.output.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n    node.output.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n    if (!sustainOn) {\n      node.output.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n    }\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  const triggerOff = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOffEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(node.output.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.output.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const gateTrigger = useCallback(\n    ({ data: message }: MessageEvent) => {\n      if (message === \"gateOn\") {\n        triggerOn();\n      } else if (message === \"gateOff\") {\n        triggerOff();\n      }\n    },\n    [triggerOff, triggerOn]\n  );\n  useEffect(() => {\n    node.gate.port.onmessage = gateTrigger;\n  }, [node, gateTrigger]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.output.context.currentTime,\n        gain: node.output.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gate\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={attackTime}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              type=\"number\"\n              step={0.05}\n              style={{ width: \"25%\" }}\n              value={decayTime}\n            />\n            <input\n              className=\"nodrag\"\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={sustainLevel}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      <li>\n        Sources\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Gate\")}>Gate</li>\n          <li onClick={() => addNode(\"Keyboard\")}>Keyboard</li>\n          <li onClick={() => addNode(\"Metronome\")}>Metronome</li>\n          <li onClick={() => addNode(\"Noise\")}>Noise</li>\n          <li onClick={() => addNode(\"Oscillator\")}>Oscillator</li>\n          <li onClick={() => addNode(\"OscillatorNote\")}>Oscillator Note</li>\n        </ul>\n      </li>\n      <li>\n        Destinations\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Destination\")}>Destination</li>\n        </ul>\n      </li>\n      <li>\n        Effects\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"BiquadFilter\")}>Biquad Filter</li>\n          <li onClick={() => addNode(\"Delay\")}>Delay</li>\n          <li onClick={() => addNode(\"DelayEffect\")}>Delay Effect</li>\n          <li onClick={() => addNode(\"DynamicsCompressor\")}>Dynamics Compressor</li>\n          <li onClick={() => addNode(\"Gain\")}>Gain</li>\n          <li onClick={() => addNode(\"StereoPanner\")}>Stereo Panner</li>\n          <li onClick={() => addNode(\"WaveShaper\")}>Wave Shaper</li>\n          <li onClick={() => addNode(\"ChannelMerger\")}>Channel Merger</li>\n          <li onClick={() => addNode(\"ChannelSplitter\")}>Channel Splitter</li>\n        </ul>\n      </li>\n      <li>\n        Controllers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"ADSR\")}>ADSR</li>\n          <li onClick={() => addNode(\"ConstantSource\")}>Constant Source</li>\n          <li onClick={() => addNode(\"Envelope\")}>Envelope</li>\n          <li onClick={() => addNode(\"InputSwitch\")}>Input Switch</li>\n          <li onClick={() => addNode(\"OutputSwitch\")}>Output Switch</li>\n        </ul>\n      </li>\n      <li>\n        Analysers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Analyser\")}>Analyser</li>\n        </ul>\n      </li>\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useCallback } from \"react\";\n\ninterface Props {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input className=\"nodrag\" type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain.toFixed(3)}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Slider onChange={value => onChange({ gain: value })} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"nodrag toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface InputSwitchNode extends ComplexAudioNode<undefined, GainNode> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const output = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    A.connect(output);\n    B.connect(output);\n\n    return {\n      A,\n      B,\n      input: undefined,\n      output,\n    };\n  }) as unknown) as InputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (input === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, input]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\ninterface KeyboardNode extends ComplexAudioNode<undefined, undefined> {\n  gate: ConstantSourceNode;\n  frequency: ConstantSourceNode;\n}\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { octave = 2, onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    // Interface\n    const gate = context.createConstantSource();\n    const frequency = context.createConstantSource();\n\n    return {\n      frequency,\n      gate,\n      input: undefined,\n      output: undefined,\n    };\n  }) as unknown) as KeyboardNode;\n  useEffect(() => {\n    node.frequency.offset.value = 0;\n    node.frequency.start();\n    node.gate.offset.value = 0;\n    node.gate.start();\n\n    return () => {\n      node.gate.disconnect();\n      node.gate.stop();\n      node.frequency.disconnect();\n      node.frequency.stop();\n    };\n  }, [node]);\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = node.frequency;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      node.frequency.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [node]\n  );\n  const playNote = useCallback(() => void (node.gate.offset.value = 1), [node]);\n  const stopNote = useCallback(() => void (node.gate.offset.value = 0), [node]);\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_item nodrag\">\n        <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 9)}>\n            1\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave - 1, 10)}>\n            2\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 11)}>\n            3\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 0)}>\n            4\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 1)}>\n            5\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 2)}>\n            6\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 3)}>\n            7\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 4)}>\n            8\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 5)}>\n            9\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 6)}>\n            10\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 7)}>\n            11\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 8)}>\n            12\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 9)}>\n            13\n          </button>\n          <button className={keyBlack} onMouseEnter={() => setNote(octave, 10)}>\n            14\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave, 11)}>\n            15\n          </button>\n          <button className={keyWhite} onMouseEnter={() => setNote(octave + 1, 0)}>\n            16\n          </button>\n        </div>\n      </div>\n      <div className=\"customNode_item\">\n        <input\n          className=\"nodrag\"\n          min={1}\n          max={6}\n          onChange={e => onChange({ octave: +e.target.value })}\n          type=\"number\"\n          value={octave}\n        />\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              className=\"nodrag\"\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span className=\"nodrag\" style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = \"white\" } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      // Will create buffer with 5 seconds of noise\n      const bufferSize = 5 * context.sampleRate;\n      const generators = {\n        brown: generateBrownNoise,\n        pink: generatePinkNoise,\n        white: generateWhiteNoise,\n      };\n      const generator = generators[type as keyof typeof generators];\n      const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n      const node = context.createBufferSource();\n      node.buffer = buffer;\n      node.loop = true;\n\n      return node;\n    },\n    [type]\n  );\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"white\">white</option>\n              <option value=\"pink\">pink</option>\n              <option value=\"brown\">brown</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface OutputSwitchNode extends ComplexAudioNode<GainNode, undefined> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    input.connect(A);\n    input.connect(B);\n\n    return {\n      A,\n      B,\n      input,\n      output: undefined,\n    };\n  }) as unknown) as OutputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (output === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, output]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Metronome: Metronome,\n  Noise: Noise,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}