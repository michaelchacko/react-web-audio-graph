{"version":3,"sources":["context/AudioContext.tsx","components/Audio.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/Node.tsx","components/nodes/Analyser/index.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/nodes/Gain.tsx","components/nodes/Noise.tsx","components/nodes/Oscillator.tsx","utils/notes.ts","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/StereoPanner.tsx","components/nodes/WaveShaper.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AudioContext","createContext","Audio","children","context","useMemo","window","webkitAudioContext","resume","useCallback","state","onClick","Provider","value","nodeCleanup","node","stop","disconnect","Nodes","nodes","useRef","addNode","id","current","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToNode","startsWith","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","useOnEdgeRemove","useNodeContext","edge","disconnectNodes","useContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","useEffect","filter","forEach","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","type","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","data","x","height","width","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","y","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","ref","style","display","React","memo","Node","inputs","outputs","title","handleStyle","background","substr","className","map","input","position","Position","Left","output","Right","Analyser","selected","nodeType","fftSizeExp","onChange","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","alignItems","checked","BiquadFilter","detune","gain","frequency","Q","createBiquadFilter","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","numberOfInputs","fill","_","channel","flexDirection","Object","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Envelope","attackTime","decayTime","releaseTime","sustainLevel","sustainOn","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","createGain","repeat","currentTime","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","releaseTimeUsed","envelope","meta","sustainTime","scale","closePath","arc","PI","drawEnvelope","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Gain","generateWhiteNoise","buffer","bufferSize","getChannelData","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","sampleRate","generator","brown","pink","createBuffer","createBufferSource","loop","Oscillator","createOscillator","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","toFixed","OscillatorNote","StereoPanner","pan","createStereoPanner","abs","WaveShaper","oversample","useState","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Float32Array","Function","updateCurve","flexWrap","rows","nodeTypes","waitForInitialNodes","initialElements","audioNodes","a","nodesWithConnections","isEdge","reduce","nodeIds","nodeId","Promise","resolve","setTimeout","snapToGrid","floor","Flow","elements","initialTransform","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","setVirtualReference","usePopper","placement","styles","attributes","setElements","onElementsConnect","useOnConnect","onEdgeRemove","onNodeRemove","useOnNodeRemove","createOnChange","produce","draft","isNode","find","element","property","onLoad","reactFlowInstance","setTransform","onElementsRemove","elementsToRemove","removeElements","uuidv4","getBoundingClientRect","left","top","defaultPosition","defaultZoom","zoom","onConnect","params","assign","addEdge","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","event","draggedNode","onPaneClick","contains","onPaneContextMenu","preventDefault","clientY","clientX","onlyRenderVisibleElements","snapGrid","zIndex","gap","popper","textareaStyles","fontSize","resize","controlsStyles","right","transformOrigin","getDefaultProject","Project","setProject","visible","setVisible","mappedElements","__rf","mappedTransform","project","JSON","stringify","drawerStyles","padding","transition","getDrawerStyles","atob","location","hash","parse","btoa","clearProject","toggleProjectDrawer","marginRight","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.764359a2.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import React, { useMemo, useRef } from \"react\";\nimport { NodeContext, NodeContextType } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AudioNode) {\n  (node as any).stop?.();\n  node.disconnect();\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToNode = connection.targetHandle.startsWith(\"input\");\n  const source = getNode(connection.source);\n  const target = getNode(connection.target);\n\n  return {\n    inputIndex: connectToNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: source,\n    target: connectToNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AudioNode) => void;\n  getNode: (id: string) => AudioNode;\n  nodes: Record<string, AudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T extends AudioNode> {\n  (context: AudioContext): T;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(\n  id: string,\n  nodeFactory: NodeFactory<T>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo<T>(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    edges.filter(edge => edge.source === id || edge.target === id).forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useMemo } from \"react\";\nimport { Handle, NodeProps, Position } from \"react-flow-renderer\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  return (\n    <div className=\"customNode\" title={id}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={paused}\n                onChange={e => onChange({ paused: !paused })}\n              />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={22050}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0.0001}\n              max={1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              type=\"number\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={inputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div\n            className=\"customNode_item\"\n            style={{\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount}>\n                <input\n                  checked={outputs === +channelCount}\n                  className=\"nodrag\"\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"number\"\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={0.1}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"0\"\n              min=\"-100\"\n              step=\"1\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"40\"\n              min=\"0\"\n              step=\"1\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"20\"\n              min=\"1\"\n              step=\"1\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.001\"\n              onChange={e => onChange({ release: +e.target.value })}\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const { attackTime = 0.2, decayTime = 0.1, onChange, releaseTime = 0.6, sustainLevel = 0.7, sustainOn = true } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => void (node.gain.value = 0), [node]);\n\n  const start = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n\n      const { currentTime } = node.context;\n      keyOnEventTime.current = currentTime;\n      node.gain.cancelScheduledValues(currentTime);\n      node.gain.setValueAtTime(0, currentTime);\n      node.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n      node.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n      if (!sustainOn) {\n        node.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n      }\n    },\n    [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]\n  );\n\n  const stop = useCallback(() => {\n    const { currentTime } = node.context;\n    keyOffEventTime.current = currentTime;\n    node.gain.cancelScheduledValues(currentTime);\n    node.gain.setValueAtTime(node.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.context.currentTime,\n        gain: node.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  useAnimationFrame(draw);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={start} onMouseUp={stop} onKeyDown={start} onKeyUp={stop}>\n          play\n        </button>\n      </div>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <label\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                className=\"nodrag\"\n                type=\"checkbox\"\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={attackTime}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              type=\"number\"\n              step={0.05}\n              style={{ width: \"25%\" }}\n              value={decayTime}\n            />\n            <input\n              className=\"nodrag\"\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={sustainLevel}\n            />\n            <input\n              className=\"nodrag\"\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              type=\"number\"\n              style={{ width: \"25%\" }}\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gain({ data, id, selected, type }: NodeProps) {\n  const { gain = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setValueAtTime(node.gain.value, node.context.currentTime);\n    node.gain.linearRampToValueAtTime(gain, node.context.currentTime + 0.01);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={`Gain: ${gain}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ gain: +e.target.value })}\n              value={gain}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = \"white\" } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      // Will create buffer with 5 seconds of noise\n      const bufferSize = 5 * context.sampleRate;\n      const generators = {\n        brown: generateBrownNoise,\n        pink: generatePinkNoise,\n        white: generateWhiteNoise,\n      };\n      const generator = generators[type as keyof typeof generators];\n      const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n      const node = context.createBufferSource();\n      node.buffer = buffer;\n      node.loop = true;\n\n      return node;\n    },\n    [type]\n  );\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"white\">white</option>\n              <option value=\"pink\">pink</option>\n              <option value=\"brown\">brown</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequency} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              type=\"number\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={0}\n              max={20000}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      <small> ({frequency.toFixed(2)} Hz)</small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ twelfth: +e.target.value })} style={{ width: \"50%\" }} value={twelfth}>\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select onChange={e => onChange({ octave: +e.target.value })} style={{ width: \"50%\" }} value={octave}>\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} style={{ width: \"100%\" }} value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"pan\"]}\n      outputs={[\"output\"]}\n      title={`Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <input\n              className=\"nodrag\"\n              type=\"range\"\n              max=\"1\"\n              min=\"-1\"\n              step=\"0.01\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              className=\"nodrag\"\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  useStoreState,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  FlowTransform,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { usePopper } from \"react-popper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport Analyser from \"components/nodes/Analyser\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport Gain from \"components/nodes/Gain\";\nimport Noise from \"components/nodes/Noise\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { useNodeContext } from \"context/NodeContext\";\n\ninterface Props {\n  elements: Elements;\n  transform: FlowTransform;\n}\n\nconst nodeTypes = {\n  Analyser: Analyser,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Gain: Gain,\n  Noise: Noise,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  StereoPanner: StereoPanner,\n  WaveShaper: WaveShaper,\n};\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}\n\nconst GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow({ elements: initialElements, transform: initialTransform }: Props) {\n  const [showPopper, setShowPopper] = React.useState(false);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const [virtualReference, setVirtualReference] = React.useState<any>(null);\n  const { styles, attributes } = usePopper(virtualReference, popperElement, {\n    placement: \"bottom-start\",\n  });\n  const transform = useStoreState(store => store.transform);\n\n  const [elements, setElements] = useState<Elements>(initialElements);\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const createOnChange = (id: string) => (data: Record<string, any>): void => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === id);\n        if (!node) {\n          return;\n        }\n        Object.keys(data).forEach(property => (node.data[property] = data[property]));\n      })\n    );\n  };\n\n  const onLoad = async (reactFlowInstance: ReactFlowInstance) => {\n    reactFlowInstance.setTransform(initialTransform);\n\n    // Attach onChange to nodes\n    setElements(\n      produce((draft: Elements) => {\n        draft.filter(isNode).forEach(node => {\n          node.data.onChange = createOnChange(node.id);\n        });\n      })\n    );\n\n    // Wait for nodes to render and handle connections\n    // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n    await waitForInitialNodes(initialElements, audioNodes);\n    const edges = initialElements.filter(isEdge);\n    edges.forEach(edge => onElementsConnect(edge));\n  };\n\n  const onConnect = (params: Edge | Connection) => {\n    const edge = Object.assign({}, params, {\n      style: {\n        stroke: params.source ? `#${params.source.substr(-6)}` : undefined,\n      },\n    });\n    setElements(elements => addEdge(edge, elements));\n    onElementsConnect(params);\n  };\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(elements => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove]\n  );\n  const onEdgeUpdate = (oldEdge: Edge, newConnection: Connection) => {\n    onEdgeRemove(oldEdge);\n    setElements(elements => removeElements([oldEdge], elements));\n    setElements(elements => addEdge(newConnection, elements));\n    onElementsConnect(newConnection);\n  };\n\n  const onNodeDragStop = (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n    setElements(\n      produce((draft: Elements) => {\n        const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n        if (!node) {\n          return;\n        }\n        node.position = {\n          x: snapToGrid(draggedNode.position.x),\n          y: snapToGrid(draggedNode.position.y),\n        };\n      })\n    );\n  };\n\n  const onPaneClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    setShowPopper(!!popperElement?.contains(event.target as Node));\n  };\n\n  const onPaneContextMenu = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setShowPopper(true);\n    setVirtualReference({\n      getBoundingClientRect: () => ({\n        top: event.clientY,\n        left: event.clientX,\n        height: 0,\n        width: 0,\n      }),\n    });\n  };\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = createOnChange(id);\n      const position = {\n        x: snapToGrid((virtualReference.getBoundingClientRect().left - transform[0]) / transform[2]),\n        y: snapToGrid((virtualReference.getBoundingClientRect().top - transform[1]) / transform[2]),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements(elements => [...elements, node]);\n      setShowPopper(false);\n    },\n    [transform, virtualReference]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[initialTransform.x, initialTransform.y]}\n        defaultZoom={initialTransform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n      {/* TODO extract as ContextMenu component */}\n      {showPopper && (\n        <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n          <ul className=\"contextMenu\">\n            <li onClick={() => addNode(\"Analyser\")}>Add Analyser</li>\n            <li onClick={() => addNode(\"BiquadFilter\")}>Add Biquad Filter</li>\n            <li onClick={() => addNode(\"ChannelMerger\")}>Add Channel Merger</li>\n            <li onClick={() => addNode(\"ChannelSplitter\")}>Add Channel Splitter</li>\n            <li onClick={() => addNode(\"ConstantSource\")}>Add Constant Source</li>\n            <li onClick={() => addNode(\"Delay\")}>Add Delay</li>\n            <li onClick={() => addNode(\"Destination\")}>Add Destination</li>\n            <li onClick={() => addNode(\"DynamicsCompressor\")}>Add Dynamics Compressor</li>\n            <li onClick={() => addNode(\"Envelope\")}>Add Envelope</li>\n            <li onClick={() => addNode(\"Gain\")}>Add Gain</li>\n            <li onClick={() => addNode(\"Noise\")}>Add Noise</li>\n            <li onClick={() => addNode(\"Oscillator\")}>Add Oscillator</li>\n            <li onClick={() => addNode(\"OscillatorNote\")}>Add Oscillator Note</li>\n            <li onClick={() => addNode(\"StereoPanner\")}>Add Stereo Panner</li>\n            <li onClick={() => addNode(\"WaveShaper\")}>Add Wave Shaper</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStoreState, Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface Props {\n  setProject: Dispatch<SetStateAction<ProjectState>>;\n}\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project({ setProject }: Props) {\n  const [visible, setVisible] = useState(false);\n  const elements = useStoreState(store => store.elements);\n  const transform = useStoreState(store => store.transform);\n  const mappedElements = elements.map(element => ({\n    ...element,\n    __rf: undefined,\n  }));\n  const mappedTransform = {\n    x: transform[0],\n    y: transform[1],\n    zoom: transform[2],\n  };\n  const project = JSON.stringify({\n    elements: mappedElements,\n    transform: mappedTransform,\n  });\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, transform } = JSON.parse(project);\n      setProject({\n        elements,\n        id: uuidv4(),\n        transform,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(project);\n  }, [project]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, transform } = JSON.parse(e.target.value);\n        setProject({\n          elements,\n          id: uuidv4(),\n          transform,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setProject]\n  );\n\n  const clearProject = useCallback(() => {\n    setProject(getDefaultProject);\n  }, [setProject]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: mappedElements,\n            transform: mappedTransform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport Flow from \"components/Flow\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport Nodes from \"components/Nodes\";\n\nfunction App() {\n  const [project, setProject] = useState<ProjectState>(getDefaultProject);\n\n  return (\n    <Audio>\n      <ReactFlowProvider>\n        <Nodes>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} elements={project.elements} transform={project.transform} />\n            <Project setProject={setProject} />\n          </div>\n        </Nodes>\n      </ReactFlowProvider>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}